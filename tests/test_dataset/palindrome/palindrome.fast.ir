; ModuleID = 'palindrome/palindrome.c'
source_filename = "palindrome/palindrome.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }

@.str = internal unnamed_addr constant { [3 x i8], [61 x i8] } { [3 x i8] c"rb\00", [61 x i8] zeroinitializer }, align 32
@.str.2 = internal unnamed_addr constant { [24 x i8], [40 x i8] } { [24 x i8] c"\09\09Unable to open file\0A\0A\00", [40 x i8] zeroinitializer }, align 32
@.str.3 = internal unnamed_addr constant { [24 x i8], [40 x i8] } { [24 x i8] c"\09\09Unable to read file\0A\0A\00", [40 x i8] zeroinitializer }, align 32
@.str.4 = internal unnamed_addr constant { [34 x i8], [62 x i8] } { [34 x i8] c"\09\09Nope, that's not a palindrome\0A\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.5 = internal unnamed_addr constant { [30 x i8], [34 x i8] } { [30 x i8] c"\09\09Yes, that's a palindrome!\0A\0A\00", [34 x i8] zeroinitializer }, align 32
@__angora_context = common thread_local global i32 0
@__angora_call_site = common thread_local global i32 0
@__angora_area_ptr = external global i8*
@__angora_cond_cmpid = external global i32
@__angora_prev_loc = common thread_local global i32 0
@__asan_option_detect_stack_use_after_return = external global i32
@___asan_gen_ = private unnamed_addr constant [18 x i8] c"1 32 128 6 buf:62\00", align 1
@___asan_gen_.6 = private constant [24 x i8] c"palindrome/palindrome.c\00", align 1
@___asan_gen_.7 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.8 = private unnamed_addr constant [24 x i8] c"palindrome/palindrome.c\00", align 1
@___asan_gen_.9 = private unnamed_addr constant { [24 x i8]*, i32, i32 } { [24 x i8]* @___asan_gen_.8, i32 69, i32 25 }
@___asan_gen_.10 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.11 = private unnamed_addr constant [24 x i8] c"palindrome/palindrome.c\00", align 1
@___asan_gen_.12 = private unnamed_addr constant { [24 x i8]*, i32, i32 } { [24 x i8]* @___asan_gen_.11, i32 72, i32 24 }
@___asan_gen_.13 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.14 = private unnamed_addr constant [24 x i8] c"palindrome/palindrome.c\00", align 1
@___asan_gen_.15 = private unnamed_addr constant { [24 x i8]*, i32, i32 } { [24 x i8]* @___asan_gen_.14, i32 79, i32 24 }
@___asan_gen_.16 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.17 = private unnamed_addr constant [24 x i8] c"palindrome/palindrome.c\00", align 1
@___asan_gen_.18 = private unnamed_addr constant { [24 x i8]*, i32, i32 } { [24 x i8]* @___asan_gen_.17, i32 88, i32 24 }
@___asan_gen_.19 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.20 = private unnamed_addr constant [24 x i8] c"palindrome/palindrome.c\00", align 1
@___asan_gen_.21 = private unnamed_addr constant { [24 x i8]*, i32, i32 } { [24 x i8]* @___asan_gen_.20, i32 90, i32 24 }
@llvm.compiler.used = appending global [5 x i8*] [i8* getelementptr inbounds ({ [3 x i8], [61 x i8] }, { [3 x i8], [61 x i8] }* @.str, i32 0, i32 0, i32 0), i8* getelementptr inbounds ({ [24 x i8], [40 x i8] }, { [24 x i8], [40 x i8] }* @.str.2, i32 0, i32 0, i32 0), i8* getelementptr inbounds ({ [24 x i8], [40 x i8] }, { [24 x i8], [40 x i8] }* @.str.3, i32 0, i32 0, i32 0), i8* getelementptr inbounds ({ [34 x i8], [62 x i8] }, { [34 x i8], [62 x i8] }* @.str.4, i32 0, i32 0, i32 0), i8* getelementptr inbounds ({ [30 x i8], [34 x i8] }, { [30 x i8], [34 x i8] }* @.str.5, i32 0, i32 0, i32 0)], section "llvm.metadata"
@0 = internal global [5 x { i64, i64, i64, i64, i64, i64, i64, i64 }] [{ i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint ({ [3 x i8], [61 x i8] }* @.str to i64), i64 3, i64 64, i64 ptrtoint ([17 x i8]* @___asan_gen_.7 to i64), i64 ptrtoint ([24 x i8]* @___asan_gen_.6 to i64), i64 0, i64 ptrtoint ({ [24 x i8]*, i32, i32 }* @___asan_gen_.9 to i64), i64 0 }, { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint ({ [24 x i8], [40 x i8] }* @.str.2 to i64), i64 24, i64 64, i64 ptrtoint ([17 x i8]* @___asan_gen_.10 to i64), i64 ptrtoint ([24 x i8]* @___asan_gen_.6 to i64), i64 0, i64 ptrtoint ({ [24 x i8]*, i32, i32 }* @___asan_gen_.12 to i64), i64 0 }, { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint ({ [24 x i8], [40 x i8] }* @.str.3 to i64), i64 24, i64 64, i64 ptrtoint ([17 x i8]* @___asan_gen_.13 to i64), i64 ptrtoint ([24 x i8]* @___asan_gen_.6 to i64), i64 0, i64 ptrtoint ({ [24 x i8]*, i32, i32 }* @___asan_gen_.15 to i64), i64 0 }, { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint ({ [34 x i8], [62 x i8] }* @.str.4 to i64), i64 34, i64 96, i64 ptrtoint ([17 x i8]* @___asan_gen_.16 to i64), i64 ptrtoint ([24 x i8]* @___asan_gen_.6 to i64), i64 0, i64 ptrtoint ({ [24 x i8]*, i32, i32 }* @___asan_gen_.18 to i64), i64 0 }, { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint ({ [30 x i8], [34 x i8] }* @.str.5 to i64), i64 30, i64 64, i64 ptrtoint ([17 x i8]* @___asan_gen_.19 to i64), i64 ptrtoint ([24 x i8]* @___asan_gen_.6 to i64), i64 0, i64 ptrtoint ({ [24 x i8]*, i32, i32 }* @___asan_gen_.21 to i64), i64 0 }]
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 1, void ()* @asan.module_ctor, i8* null }]
@llvm.global_dtors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 1, void ()* @asan.module_dtor, i8* null }]

; Function Attrs: nounwind sanitize_address uwtable
define i32 @check_palindrome(i8* nocapture readonly %buf) local_unnamed_addr #0 !dbg !22 {
entry:
  %0 = alloca i64, align 32, !dbg !41
  store i64 0, i64* %0, !dbg !41
  %1 = load i32, i32* @__angora_call_site, !dbg !41, !nosanitize !2
  %2 = load i32, i32* @__angora_context, !dbg !41, !nosanitize !2
  %3 = xor i32 %2, %1, !dbg !41, !nosanitize !2
  store i32 %3, i32* @__angora_context, !dbg !41, !nosanitize !2
  call void @llvm.dbg.value(metadata i8* %buf, metadata !28, metadata !DIExpression()), !dbg !41
  call void @llvm.dbg.value(metadata i32 -1, metadata !29, metadata !DIExpression()), !dbg !42
  call void @llvm.dbg.value(metadata i32 1, metadata !32, metadata !DIExpression()), !dbg !43
  store i32 1028491, i32* @__angora_call_site, !dbg !44, !nosanitize !2
  %call = tail call i64 @strlen(i8* %buf) #8, !dbg !44
  %conv = trunc i64 %call to i32, !dbg !45
  call void @llvm.dbg.value(metadata i32 %conv, metadata !33, metadata !DIExpression()), !dbg !46
  %4 = ptrtoint i8* %buf to i64, !dbg !47
  %5 = lshr i64 %4, 3, !dbg !47
  %6 = add i64 %5, 2147450880, !dbg !47
  %7 = inttoptr i64 %6 to i8*, !dbg !47
  %8 = load i8, i8* %7, !dbg !47
  %9 = icmp ne i8 %8, 0, !dbg !47
  br i1 %9, label %10, label %15, !dbg !47, !prof !49

; <label>:10:                                     ; preds = %entry
  %11 = and i64 %4, 7, !dbg !47
  %12 = trunc i64 %11 to i8, !dbg !47
  %13 = icmp sge i8 %12, %8, !dbg !47
  br i1 %13, label %14, label %15, !dbg !47

; <label>:14:                                     ; preds = %10
  call void @__asan_report_load1(i64 %4), !dbg !47
  call void asm sideeffect "", ""()
  unreachable

; <label>:15:                                     ; preds = %10, %entry
  %16 = load i8, i8* %buf, align 1, !dbg !47, !tbaa !50
  %cmp = icmp eq i8 %16, 120, !dbg !53
  %17 = load i32, i32* @__angora_cond_cmpid, !dbg !54, !nosanitize !2
  %18 = icmp eq i32 852923010, %17, !dbg !54, !nosanitize !2
  br i1 %18, label %19, label %24, !dbg !54, !prof !55

; <label>:19:                                     ; preds = %15
  %20 = zext i8 %16 to i64, !dbg !54
  %21 = zext i1 %cmp to i32, !dbg !54, !nosanitize !2
  %22 = load i32, i32* @__angora_context, !dbg !54, !nosanitize !2
  %23 = call i32 @__angora_trace_cmp(i32 %21, i32 852923010, i32 %22, i64 %20, i64 120), !dbg !54, !nosanitize !2
  br label %24, !dbg !54, !nosanitize !2

; <label>:24:                                     ; preds = %15, %19
  br i1 %cmp, label %if.then, label %if.else, !dbg !54

if.then:                                          ; preds = %24
  %25 = load i32, i32* @__angora_prev_loc, !dbg !56, !nosanitize !2
  %26 = load i8*, i8** @__angora_area_ptr, !dbg !56, !nosanitize !2
  %27 = xor i32 %25, 825752, !dbg !56, !nosanitize !2
  %28 = getelementptr i8, i8* %26, i32 %27, !dbg !56, !nosanitize !2
  %29 = load i8, i8* %28, !dbg !56, !nosanitize !2
  %30 = add i8 %29, 1, !dbg !56, !nosanitize !2
  %31 = icmp eq i8 %30, 0, !dbg !56, !nosanitize !2
  %32 = zext i1 %31 to i8, !dbg !56, !nosanitize !2
  %33 = add i8 %30, %32, !dbg !56, !nosanitize !2
  store i8 %33, i8* %28, !dbg !56, !nosanitize !2
  %34 = load i32, i32* @__angora_context, !dbg !56, !nosanitize !2
  %35 = xor i32 %34, 412876, !dbg !56, !nosanitize !2
  store i32 %35, i32* @__angora_prev_loc, !dbg !56, !nosanitize !2
  call void @llvm.dbg.value(metadata i32 64, metadata !34, metadata !DIExpression()), !dbg !58
  br label %if.end, !dbg !59

if.else:                                          ; preds = %24
  %36 = load i32, i32* @__angora_prev_loc, !dbg !60, !nosanitize !2
  %37 = load i8*, i8** @__angora_area_ptr, !dbg !60, !nosanitize !2
  %38 = xor i32 %36, 1018308, !dbg !60, !nosanitize !2
  %39 = getelementptr i8, i8* %37, i32 %38, !dbg !60, !nosanitize !2
  %40 = load i8, i8* %39, !dbg !60, !nosanitize !2
  %41 = add i8 %40, 1, !dbg !60, !nosanitize !2
  %42 = icmp eq i8 %41, 0, !dbg !60, !nosanitize !2
  %43 = zext i1 %42 to i8, !dbg !60, !nosanitize !2
  %44 = add i8 %41, %43, !dbg !60, !nosanitize !2
  store i8 %44, i8* %39, !dbg !60, !nosanitize !2
  %45 = load i32, i32* @__angora_context, !dbg !60, !nosanitize !2
  %46 = xor i32 %45, 509154, !dbg !60, !nosanitize !2
  store i32 %46, i32* @__angora_prev_loc, !dbg !60, !nosanitize !2
  call void @llvm.dbg.value(metadata i32 128, metadata !34, metadata !DIExpression()), !dbg !58
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %array_len.0 = phi i64 [ 64, %if.then ], [ 128, %if.else ]
  %47 = load i32, i32* @__angora_prev_loc, !dbg !62, !nosanitize !2
  %48 = load i8*, i8** @__angora_area_ptr, !dbg !62, !nosanitize !2
  %49 = xor i32 %47, 933159, !dbg !62, !nosanitize !2
  %50 = getelementptr i8, i8* %48, i32 %49, !dbg !62, !nosanitize !2
  %51 = load i8, i8* %50, !dbg !62, !nosanitize !2
  %52 = add i8 %51, 1, !dbg !62, !nosanitize !2
  %53 = icmp eq i8 %52, 0, !dbg !62, !nosanitize !2
  %54 = zext i1 %53 to i8, !dbg !62, !nosanitize !2
  %55 = add i8 %52, %54, !dbg !62, !nosanitize !2
  store i8 %55, i8* %50, !dbg !62, !nosanitize !2
  %56 = load i32, i32* @__angora_context, !dbg !62, !nosanitize !2
  %57 = xor i32 %56, 466579, !dbg !62, !nosanitize !2
  store i32 %57, i32* @__angora_prev_loc, !dbg !62, !nosanitize !2
  %58 = mul i64 %array_len.0, 1, !dbg !62
  %59 = and i64 %58, 31, !dbg !62
  %60 = sub i64 32, %59, !dbg !62
  %61 = icmp ne i64 %60, 32, !dbg !62
  %62 = select i1 %61, i64 %60, i64 0, !dbg !62
  %63 = add i64 64, %62, !dbg !62
  %64 = add i64 %58, %63, !dbg !62
  %65 = alloca i8, i64 %64, align 32, !dbg !62
  %66 = ptrtoint i8* %65 to i64, !dbg !62
  %67 = add i64 %66, 32, !dbg !62
  call void @__asan_alloca_poison(i64 %67, i64 %58), !dbg !62
  %68 = ptrtoint i8* %65 to i64, !dbg !62
  store i64 %68, i64* %0, !dbg !62
  %69 = inttoptr i64 %67 to i8*, !dbg !62
  call void @llvm.dbg.value(metadata i64 %array_len.0, metadata !35, metadata !DIExpression()), !dbg !63
  call void @llvm.dbg.declare(metadata i8* %69, metadata !37, metadata !DIExpression()), !dbg !64
  call void @llvm.dbg.value(metadata i32 0, metadata !30, metadata !DIExpression()), !dbg !65
  %cmp384 = icmp sgt i32 %conv, 0, !dbg !66
  %70 = load i32, i32* @__angora_cond_cmpid, !dbg !69, !nosanitize !2
  %71 = icmp eq i32 852926541, %70, !dbg !69, !nosanitize !2
  br i1 %71, label %72, label %77, !dbg !69, !prof !55

; <label>:72:                                     ; preds = %if.end
  %73 = zext i32 %conv to i64, !dbg !69
  %74 = zext i1 %cmp384 to i32, !dbg !69, !nosanitize !2
  %75 = load i32, i32* @__angora_context, !dbg !69, !nosanitize !2
  %76 = call i32 @__angora_trace_cmp(i32 %74, i32 852926541, i32 %75, i64 %73, i64 0), !dbg !69, !nosanitize !2
  br label %77, !dbg !69, !nosanitize !2

; <label>:77:                                     ; preds = %if.end, %72
  br i1 %cmp384, label %for.body.preheader, label %for.end.thread, !dbg !69

for.end.thread:                                   ; preds = %77
  %78 = load i32, i32* @__angora_prev_loc, !dbg !70, !nosanitize !2
  %79 = load i8*, i8** @__angora_area_ptr, !dbg !70, !nosanitize !2
  %80 = xor i32 %78, 659199, !dbg !70, !nosanitize !2
  %81 = getelementptr i8, i8* %79, i32 %80, !dbg !70, !nosanitize !2
  %82 = load i8, i8* %81, !dbg !70, !nosanitize !2
  %83 = add i8 %82, 1, !dbg !70, !nosanitize !2
  %84 = icmp eq i8 %83, 0, !dbg !70, !nosanitize !2
  %85 = zext i1 %84 to i8, !dbg !70, !nosanitize !2
  %86 = add i8 %83, %85, !dbg !70, !nosanitize !2
  store i8 %86, i8* %81, !dbg !70, !nosanitize !2
  %87 = load i32, i32* @__angora_context, !dbg !70, !nosanitize !2
  %88 = xor i32 %87, 329599, !dbg !70, !nosanitize !2
  store i32 %88, i32* @__angora_prev_loc, !dbg !70, !nosanitize !2
  call void @llvm.dbg.value(metadata i32 0, metadata !30, metadata !DIExpression()), !dbg !65
  br label %for.end16, !dbg !72

for.body.preheader:                               ; preds = %77
  %89 = load i32, i32* @__angora_prev_loc, !nosanitize !2
  %90 = load i8*, i8** @__angora_area_ptr, !nosanitize !2
  %91 = xor i32 %89, 911614, !nosanitize !2
  %92 = getelementptr i8, i8* %90, i32 %91, !nosanitize !2
  %93 = load i8, i8* %92, !nosanitize !2
  %94 = add i8 %93, 1, !nosanitize !2
  %95 = icmp eq i8 %94, 0, !nosanitize !2
  %96 = zext i1 %95 to i8, !nosanitize !2
  %97 = add i8 %94, %96, !nosanitize !2
  store i8 %97, i8* %92, !nosanitize !2
  %98 = load i32, i32* @__angora_context, !nosanitize !2
  %99 = xor i32 %98, 455807, !nosanitize !2
  store i32 %99, i32* @__angora_prev_loc, !nosanitize !2
  %wide.trip.count95 = and i64 %call, 4294967295
  br label %for.body, !dbg !73

for.body:                                         ; preds = %129, %for.body.preheader
  %indvars.iv93 = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next94, %129 ]
  %100 = load i32, i32* @__angora_prev_loc, !dbg !65, !nosanitize !2
  %101 = load i8*, i8** @__angora_area_ptr, !dbg !65, !nosanitize !2
  %102 = xor i32 %100, 937350, !dbg !65, !nosanitize !2
  %103 = getelementptr i8, i8* %101, i32 %102, !dbg !65, !nosanitize !2
  %104 = load i8, i8* %103, !dbg !65, !nosanitize !2
  %105 = add i8 %104, 1, !dbg !65, !nosanitize !2
  %106 = icmp eq i8 %105, 0, !dbg !65, !nosanitize !2
  %107 = zext i1 %106 to i8, !dbg !65, !nosanitize !2
  %108 = add i8 %105, %107, !dbg !65, !nosanitize !2
  store i8 %108, i8* %103, !dbg !65, !nosanitize !2
  %109 = load i32, i32* @__angora_context, !dbg !65, !nosanitize !2
  %110 = xor i32 %109, 468675, !dbg !65, !nosanitize !2
  store i32 %110, i32* @__angora_prev_loc, !dbg !65, !nosanitize !2
  call void @llvm.dbg.value(metadata i64 %indvars.iv93, metadata !30, metadata !DIExpression()), !dbg !65
  %arrayidx5 = getelementptr inbounds i8, i8* %69, i64 %indvars.iv93, !dbg !75
  %111 = ptrtoint i8* %arrayidx5 to i64, !dbg !76
  %112 = lshr i64 %111, 3, !dbg !76
  %113 = add i64 %112, 2147450880, !dbg !76
  %114 = inttoptr i64 %113 to i8*, !dbg !76
  %115 = load i8, i8* %114, !dbg !76
  %116 = icmp ne i8 %115, 0, !dbg !76
  br i1 %116, label %117, label %122, !dbg !76, !prof !49

; <label>:117:                                    ; preds = %for.body
  %118 = and i64 %111, 7, !dbg !76
  %119 = trunc i64 %118 to i8, !dbg !76
  %120 = icmp sge i8 %119, %115, !dbg !76
  br i1 %120, label %121, label %122, !dbg !76

; <label>:121:                                    ; preds = %117
  call void @__asan_report_store1(i64 %111), !dbg !76
  call void asm sideeffect "", ""()
  unreachable

; <label>:122:                                    ; preds = %117, %for.body
  store i8 0, i8* %arrayidx5, align 1, !dbg !76, !tbaa !50
  %indvars.iv.next94 = add nuw nsw i64 %indvars.iv93, 1, !dbg !77
  call void @llvm.dbg.value(metadata i32 undef, metadata !30, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !65
  %exitcond96 = icmp eq i64 %indvars.iv.next94, %wide.trip.count95, !dbg !66
  %123 = load i32, i32* @__angora_cond_cmpid, !dbg !69, !nosanitize !2
  %124 = icmp eq i32 -1736187672, %123, !dbg !69, !nosanitize !2
  br i1 %124, label %125, label %129, !dbg !69, !prof !55

; <label>:125:                                    ; preds = %122
  %126 = zext i1 %exitcond96 to i32, !dbg !69, !nosanitize !2
  %127 = load i32, i32* @__angora_context, !dbg !69, !nosanitize !2
  %128 = call i32 @__angora_trace_cmp(i32 %126, i32 -1736187672, i32 %127, i64 %indvars.iv.next94, i64 %wide.trip.count95), !dbg !69, !nosanitize !2
  br label %129, !dbg !69, !nosanitize !2

; <label>:129:                                    ; preds = %122, %125
  br i1 %exitcond96, label %for.end, label %for.body, !dbg !69, !llvm.loop !78

for.end:                                          ; preds = %129
  %130 = load i32, i32* @__angora_prev_loc, !dbg !70, !nosanitize !2
  %131 = load i8*, i8** @__angora_area_ptr, !dbg !70, !nosanitize !2
  %132 = xor i32 %130, 603035, !dbg !70, !nosanitize !2
  %133 = getelementptr i8, i8* %131, i32 %132, !dbg !70, !nosanitize !2
  %134 = load i8, i8* %133, !dbg !70, !nosanitize !2
  %135 = add i8 %134, 1, !dbg !70, !nosanitize !2
  %136 = icmp eq i8 %135, 0, !dbg !70, !nosanitize !2
  %137 = zext i1 %136 to i8, !dbg !70, !nosanitize !2
  %138 = add i8 %135, %137, !dbg !70, !nosanitize !2
  store i8 %138, i8* %133, !dbg !70, !nosanitize !2
  %139 = load i32, i32* @__angora_context, !dbg !70, !nosanitize !2
  %140 = xor i32 %139, 301517, !dbg !70, !nosanitize !2
  store i32 %140, i32* @__angora_prev_loc, !dbg !70, !nosanitize !2
  call void @llvm.dbg.value(metadata i32 0, metadata !30, metadata !DIExpression()), !dbg !65
  br i1 %cmp384, label %for.body9.preheader, label %for.end16, !dbg !72

for.body9.preheader:                              ; preds = %for.end
  %141 = load i32, i32* @__angora_prev_loc, !nosanitize !2
  %142 = load i8*, i8** @__angora_area_ptr, !nosanitize !2
  %143 = xor i32 %141, 83496, !nosanitize !2
  %144 = getelementptr i8, i8* %142, i32 %143, !nosanitize !2
  %145 = load i8, i8* %144, !nosanitize !2
  %146 = add i8 %145, 1, !nosanitize !2
  %147 = icmp eq i8 %146, 0, !nosanitize !2
  %148 = zext i1 %147 to i8, !nosanitize !2
  %149 = add i8 %146, %148, !nosanitize !2
  store i8 %149, i8* %144, !nosanitize !2
  %150 = load i32, i32* @__angora_context, !nosanitize !2
  %151 = xor i32 %150, 41748, !nosanitize !2
  store i32 %151, i32* @__angora_prev_loc, !nosanitize !2
  %wide.trip.count91 = and i64 %call, 4294967295
  br label %for.body9, !dbg !80

for.body9:                                        ; preds = %194, %for.body9.preheader
  %indvars.iv89 = phi i64 [ 0, %for.body9.preheader ], [ %indvars.iv.next90, %194 ]
  %152 = load i32, i32* @__angora_prev_loc, !dbg !65, !nosanitize !2
  %153 = load i8*, i8** @__angora_area_ptr, !dbg !65, !nosanitize !2
  %154 = xor i32 %152, 627850, !dbg !65, !nosanitize !2
  %155 = getelementptr i8, i8* %153, i32 %154, !dbg !65, !nosanitize !2
  %156 = load i8, i8* %155, !dbg !65, !nosanitize !2
  %157 = add i8 %156, 1, !dbg !65, !nosanitize !2
  %158 = icmp eq i8 %157, 0, !dbg !65, !nosanitize !2
  %159 = zext i1 %158 to i8, !dbg !65, !nosanitize !2
  %160 = add i8 %157, %159, !dbg !65, !nosanitize !2
  store i8 %160, i8* %155, !dbg !65, !nosanitize !2
  %161 = load i32, i32* @__angora_context, !dbg !65, !nosanitize !2
  %162 = xor i32 %161, 313925, !dbg !65, !nosanitize !2
  store i32 %162, i32* @__angora_prev_loc, !dbg !65, !nosanitize !2
  call void @llvm.dbg.value(metadata i64 %indvars.iv89, metadata !30, metadata !DIExpression()), !dbg !65
  %arrayidx11 = getelementptr inbounds i8, i8* %buf, i64 %indvars.iv89, !dbg !80
  %163 = ptrtoint i8* %arrayidx11 to i64, !dbg !80
  %164 = lshr i64 %163, 3, !dbg !80
  %165 = add i64 %164, 2147450880, !dbg !80
  %166 = inttoptr i64 %165 to i8*, !dbg !80
  %167 = load i8, i8* %166, !dbg !80
  %168 = icmp ne i8 %167, 0, !dbg !80
  br i1 %168, label %169, label %174, !dbg !80, !prof !49

; <label>:169:                                    ; preds = %for.body9
  %170 = and i64 %163, 7, !dbg !80
  %171 = trunc i64 %170 to i8, !dbg !80
  %172 = icmp sge i8 %171, %167, !dbg !80
  br i1 %172, label %173, label %174, !dbg !80

; <label>:173:                                    ; preds = %169
  call void @__asan_report_load1(i64 %163), !dbg !80
  call void asm sideeffect "", ""()
  unreachable

; <label>:174:                                    ; preds = %169, %for.body9
  %175 = load i8, i8* %arrayidx11, align 1, !dbg !80, !tbaa !50
  %arrayidx13 = getelementptr inbounds i8, i8* %69, i64 %indvars.iv89, !dbg !83
  %176 = ptrtoint i8* %arrayidx13 to i64, !dbg !84
  %177 = lshr i64 %176, 3, !dbg !84
  %178 = add i64 %177, 2147450880, !dbg !84
  %179 = inttoptr i64 %178 to i8*, !dbg !84
  %180 = load i8, i8* %179, !dbg !84
  %181 = icmp ne i8 %180, 0, !dbg !84
  br i1 %181, label %182, label %187, !dbg !84, !prof !49

; <label>:182:                                    ; preds = %174
  %183 = and i64 %176, 7, !dbg !84
  %184 = trunc i64 %183 to i8, !dbg !84
  %185 = icmp sge i8 %184, %180, !dbg !84
  br i1 %185, label %186, label %187, !dbg !84

; <label>:186:                                    ; preds = %182
  call void @__asan_report_store1(i64 %176), !dbg !84
  call void asm sideeffect "", ""()
  unreachable

; <label>:187:                                    ; preds = %182, %174
  store i8 %175, i8* %arrayidx13, align 1, !dbg !84, !tbaa !50
  %indvars.iv.next90 = add nuw nsw i64 %indvars.iv89, 1, !dbg !85
  call void @llvm.dbg.value(metadata i32 undef, metadata !30, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !65
  %exitcond92 = icmp eq i64 %indvars.iv.next90, %wide.trip.count91, !dbg !86
  %188 = load i32, i32* @__angora_cond_cmpid, !dbg !72, !nosanitize !2
  %189 = icmp eq i32 852926673, %188, !dbg !72, !nosanitize !2
  br i1 %189, label %190, label %194, !dbg !72, !prof !55

; <label>:190:                                    ; preds = %187
  %191 = zext i1 %exitcond92 to i32, !dbg !72, !nosanitize !2
  %192 = load i32, i32* @__angora_context, !dbg !72, !nosanitize !2
  %193 = call i32 @__angora_trace_cmp(i32 %191, i32 852926673, i32 %192, i64 %indvars.iv.next90, i64 %wide.trip.count91), !dbg !72, !nosanitize !2
  br label %194, !dbg !72, !nosanitize !2

; <label>:194:                                    ; preds = %187, %190
  br i1 %exitcond92, label %for.end16, label %for.body9, !dbg !72, !llvm.loop !87

for.end16:                                        ; preds = %194, %for.end.thread, %for.end
  %195 = load i32, i32* @__angora_prev_loc, !dbg !89, !nosanitize !2
  %196 = load i8*, i8** @__angora_area_ptr, !dbg !89, !nosanitize !2
  %197 = xor i32 %195, 30403, !dbg !89, !nosanitize !2
  %198 = getelementptr i8, i8* %196, i32 %197, !dbg !89, !nosanitize !2
  %199 = load i8, i8* %198, !dbg !89, !nosanitize !2
  %200 = add i8 %199, 1, !dbg !89, !nosanitize !2
  %201 = icmp eq i8 %200, 0, !dbg !89, !nosanitize !2
  %202 = zext i1 %201 to i8, !dbg !89, !nosanitize !2
  %203 = add i8 %200, %202, !dbg !89, !nosanitize !2
  store i8 %203, i8* %198, !dbg !89, !nosanitize !2
  %204 = load i32, i32* @__angora_context, !dbg !89, !nosanitize !2
  %205 = xor i32 %204, 15201, !dbg !89, !nosanitize !2
  store i32 %205, i32* @__angora_prev_loc, !dbg !89, !nosanitize !2
  call void @llvm.dbg.value(metadata i32 0, metadata !30, metadata !DIExpression()), !dbg !65
  call void @llvm.dbg.value(metadata i32 -1, metadata !29, metadata !DIExpression()), !dbg !42
  %206 = ptrtoint i8* %69 to i64, !dbg !91
  %207 = lshr i64 %206, 3, !dbg !91
  %208 = add i64 %207, 2147450880, !dbg !91
  %209 = inttoptr i64 %208 to i8*, !dbg !91
  %210 = load i8, i8* %209, !dbg !91
  %211 = icmp ne i8 %210, 0, !dbg !91
  br i1 %211, label %212, label %217, !dbg !91, !prof !49

; <label>:212:                                    ; preds = %for.end16
  %213 = and i64 %206, 7, !dbg !91
  %214 = trunc i64 %213 to i8, !dbg !91
  %215 = icmp sge i8 %214, %210, !dbg !91
  br i1 %215, label %216, label %217, !dbg !91

; <label>:216:                                    ; preds = %212
  call void @__asan_report_load1(i64 %206), !dbg !91
  call void asm sideeffect "", ""()
  unreachable

; <label>:217:                                    ; preds = %212, %for.end16
  %218 = load i8, i8* %69, align 16, !dbg !91, !tbaa !50
  %cmp2178 = icmp eq i8 %218, 0, !dbg !93
  %219 = load i32, i32* @__angora_cond_cmpid, !dbg !94, !nosanitize !2
  %220 = icmp eq i32 852935517, %219, !dbg !94, !nosanitize !2
  br i1 %220, label %221, label %226, !dbg !94, !prof !55

; <label>:221:                                    ; preds = %217
  %222 = zext i8 %218 to i64, !dbg !94
  %223 = zext i1 %cmp2178 to i32, !dbg !94, !nosanitize !2
  %224 = load i32, i32* @__angora_context, !dbg !94, !nosanitize !2
  %225 = call i32 @__angora_trace_cmp(i32 %223, i32 852935517, i32 %224, i64 %222, i64 0), !dbg !94, !nosanitize !2
  br label %226, !dbg !94, !nosanitize !2

; <label>:226:                                    ; preds = %217, %221
  br i1 %cmp2178, label %if.end31.thread, label %for.body23, !dbg !94

if.end31.thread:                                  ; preds = %226
  %227 = load i32, i32* @__angora_prev_loc, !dbg !42, !nosanitize !2
  %228 = load i8*, i8** @__angora_area_ptr, !dbg !42, !nosanitize !2
  %229 = xor i32 %227, 957795, !dbg !42, !nosanitize !2
  %230 = getelementptr i8, i8* %228, i32 %229, !dbg !42, !nosanitize !2
  %231 = load i8, i8* %230, !dbg !42, !nosanitize !2
  %232 = add i8 %231, 1, !dbg !42, !nosanitize !2
  %233 = icmp eq i8 %232, 0, !dbg !42, !nosanitize !2
  %234 = zext i1 %233 to i8, !dbg !42, !nosanitize !2
  %235 = add i8 %232, %234, !dbg !42, !nosanitize !2
  store i8 %235, i8* %230, !dbg !42, !nosanitize !2
  %236 = load i32, i32* @__angora_context, !dbg !42, !nosanitize !2
  %237 = xor i32 %236, 478897, !dbg !42, !nosanitize !2
  store i32 %237, i32* @__angora_prev_loc, !dbg !42, !nosanitize !2
  call void @llvm.dbg.value(metadata i32 %inc24, metadata !29, metadata !DIExpression()), !dbg !42
  call void @llvm.dbg.value(metadata i32 %inc24, metadata !31, metadata !DIExpression()), !dbg !95
  call void @llvm.dbg.value(metadata i32 %steps.0, metadata !31, metadata !DIExpression()), !dbg !95
  call void @llvm.dbg.value(metadata i32 0, metadata !30, metadata !DIExpression()), !dbg !65
  call void @llvm.dbg.value(metadata i32 1, metadata !32, metadata !DIExpression()), !dbg !43
  br label %for.body35.preheader, !dbg !96

for.body23:                                       ; preds = %226, %269
  %indvars.iv87 = phi i64 [ %indvars.iv.next88, %269 ], [ 0, %226 ]
  %len.080 = phi i32 [ %inc24, %269 ], [ -1, %226 ]
  %238 = load i32, i32* @__angora_prev_loc, !dbg !42, !nosanitize !2
  %239 = load i8*, i8** @__angora_area_ptr, !dbg !42, !nosanitize !2
  %240 = xor i32 %238, 76029, !dbg !42, !nosanitize !2
  %241 = getelementptr i8, i8* %239, i32 %240, !dbg !42, !nosanitize !2
  %242 = load i8, i8* %241, !dbg !42, !nosanitize !2
  %243 = add i8 %242, 1, !dbg !42, !nosanitize !2
  %244 = icmp eq i8 %243, 0, !dbg !42, !nosanitize !2
  %245 = zext i1 %244 to i8, !dbg !42, !nosanitize !2
  %246 = add i8 %243, %245, !dbg !42, !nosanitize !2
  store i8 %246, i8* %241, !dbg !42, !nosanitize !2
  %247 = load i32, i32* @__angora_context, !dbg !42, !nosanitize !2
  %248 = xor i32 %247, 38014, !dbg !42, !nosanitize !2
  store i32 %248, i32* @__angora_prev_loc, !dbg !42, !nosanitize !2
  call void @llvm.dbg.value(metadata i32 %len.080, metadata !29, metadata !DIExpression()), !dbg !42
  call void @llvm.dbg.value(metadata i64 %indvars.iv87, metadata !30, metadata !DIExpression()), !dbg !65
  %inc24 = add nsw i32 %len.080, 1, !dbg !98
  %indvars.iv.next88 = add nuw i64 %indvars.iv87, 1, !dbg !100
  call void @llvm.dbg.value(metadata i32 %inc24, metadata !29, metadata !DIExpression()), !dbg !42
  call void @llvm.dbg.value(metadata i32 undef, metadata !30, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !65
  %arrayidx19 = getelementptr inbounds i8, i8* %69, i64 %indvars.iv.next88, !dbg !91
  %249 = ptrtoint i8* %arrayidx19 to i64, !dbg !91
  %250 = lshr i64 %249, 3, !dbg !91
  %251 = add i64 %250, 2147450880, !dbg !91
  %252 = inttoptr i64 %251 to i8*, !dbg !91
  %253 = load i8, i8* %252, !dbg !91
  %254 = icmp ne i8 %253, 0, !dbg !91
  br i1 %254, label %255, label %260, !dbg !91, !prof !49

; <label>:255:                                    ; preds = %for.body23
  %256 = and i64 %249, 7, !dbg !91
  %257 = trunc i64 %256 to i8, !dbg !91
  %258 = icmp sge i8 %257, %253, !dbg !91
  br i1 %258, label %259, label %260, !dbg !91

; <label>:259:                                    ; preds = %255
  call void @__asan_report_load1(i64 %249), !dbg !91
  call void asm sideeffect "", ""()
  unreachable

; <label>:260:                                    ; preds = %255, %for.body23
  %261 = load i8, i8* %arrayidx19, align 1, !dbg !91, !tbaa !50
  %cmp21 = icmp eq i8 %261, 0, !dbg !93
  %262 = load i32, i32* @__angora_cond_cmpid, !dbg !94, !nosanitize !2
  %263 = icmp eq i32 -1736160744, %262, !dbg !94, !nosanitize !2
  br i1 %263, label %264, label %269, !dbg !94, !prof !55

; <label>:264:                                    ; preds = %260
  %265 = zext i8 %261 to i64, !dbg !94
  %266 = zext i1 %cmp21 to i32, !dbg !94, !nosanitize !2
  %267 = load i32, i32* @__angora_context, !dbg !94, !nosanitize !2
  %268 = call i32 @__angora_trace_cmp(i32 %266, i32 -1736160744, i32 %267, i64 %265, i64 0), !dbg !94, !nosanitize !2
  br label %269, !dbg !94, !nosanitize !2

; <label>:269:                                    ; preds = %260, %264
  br i1 %cmp21, label %for.end27, label %for.body23, !dbg !94, !llvm.loop !101

for.end27:                                        ; preds = %269
  %270 = load i32, i32* @__angora_prev_loc, !dbg !42, !nosanitize !2
  %271 = load i8*, i8** @__angora_area_ptr, !dbg !42, !nosanitize !2
  %272 = xor i32 %270, 432734, !dbg !42, !nosanitize !2
  %273 = getelementptr i8, i8* %271, i32 %272, !dbg !42, !nosanitize !2
  %274 = load i8, i8* %273, !dbg !42, !nosanitize !2
  %275 = add i8 %274, 1, !dbg !42, !nosanitize !2
  %276 = icmp eq i8 %275, 0, !dbg !42, !nosanitize !2
  %277 = zext i1 %276 to i8, !dbg !42, !nosanitize !2
  %278 = add i8 %275, %277, !dbg !42, !nosanitize !2
  store i8 %278, i8* %273, !dbg !42, !nosanitize !2
  %279 = load i32, i32* @__angora_context, !dbg !42, !nosanitize !2
  %280 = xor i32 %279, 216367, !dbg !42, !nosanitize !2
  store i32 %280, i32* @__angora_prev_loc, !dbg !42, !nosanitize !2
  call void @llvm.dbg.value(metadata i32 %len.080, metadata !29, metadata !DIExpression()), !dbg !42
  call void @llvm.dbg.value(metadata i32 %len.080, metadata !29, metadata !DIExpression()), !dbg !42
  call void @llvm.dbg.value(metadata i32 %len.080, metadata !29, metadata !DIExpression()), !dbg !42
  call void @llvm.dbg.value(metadata i32 %inc24, metadata !29, metadata !DIExpression()), !dbg !42
  call void @llvm.dbg.value(metadata i32 %inc24, metadata !31, metadata !DIExpression()), !dbg !95
  %rem = srem i32 %inc24, 2, !dbg !103
  %cmp28 = icmp eq i32 %rem, 1, !dbg !105
  %281 = load i32, i32* @__angora_cond_cmpid, !dbg !106, !nosanitize !2
  %282 = icmp eq i32 852924792, %281, !dbg !106, !nosanitize !2
  br i1 %282, label %283, label %288, !dbg !106, !prof !55

; <label>:283:                                    ; preds = %for.end27
  %284 = zext i32 %rem to i64, !dbg !106
  %285 = zext i1 %cmp28 to i32, !dbg !106, !nosanitize !2
  %286 = load i32, i32* @__angora_context, !dbg !106, !nosanitize !2
  %287 = call i32 @__angora_trace_cmp(i32 %285, i32 852924792, i32 %286, i64 %284, i64 1), !dbg !106, !nosanitize !2
  br label %288, !dbg !106, !nosanitize !2

; <label>:288:                                    ; preds = %for.end27, %283
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !106

if.then30:                                        ; preds = %288
  %289 = load i32, i32* @__angora_prev_loc, !dbg !107, !nosanitize !2
  %290 = load i8*, i8** @__angora_area_ptr, !dbg !107, !nosanitize !2
  %291 = xor i32 %289, 251530, !dbg !107, !nosanitize !2
  %292 = getelementptr i8, i8* %290, i32 %291, !dbg !107, !nosanitize !2
  %293 = load i8, i8* %292, !dbg !107, !nosanitize !2
  %294 = add i8 %293, 1, !dbg !107, !nosanitize !2
  %295 = icmp eq i8 %294, 0, !dbg !107, !nosanitize !2
  %296 = zext i1 %295 to i8, !dbg !107, !nosanitize !2
  %297 = add i8 %294, %296, !dbg !107, !nosanitize !2
  store i8 %297, i8* %292, !dbg !107, !nosanitize !2
  %298 = load i32, i32* @__angora_context, !dbg !107, !nosanitize !2
  %299 = xor i32 %298, 125765, !dbg !107, !nosanitize !2
  store i32 %299, i32* @__angora_prev_loc, !dbg !107, !nosanitize !2
  call void @llvm.dbg.value(metadata i32 %len.080, metadata !31, metadata !DIExpression()), !dbg !95
  br label %if.end31, !dbg !109

if.end31:                                         ; preds = %if.then30, %288
  %steps.0 = phi i32 [ %len.080, %if.then30 ], [ %inc24, %288 ], !dbg !63
  %300 = load i32, i32* @__angora_prev_loc, !dbg !95, !nosanitize !2
  %301 = load i8*, i8** @__angora_area_ptr, !dbg !95, !nosanitize !2
  %302 = xor i32 %300, 177939, !dbg !95, !nosanitize !2
  %303 = getelementptr i8, i8* %301, i32 %302, !dbg !95, !nosanitize !2
  %304 = load i8, i8* %303, !dbg !95, !nosanitize !2
  %305 = add i8 %304, 1, !dbg !95, !nosanitize !2
  %306 = icmp eq i8 %305, 0, !dbg !95, !nosanitize !2
  %307 = zext i1 %306 to i8, !dbg !95, !nosanitize !2
  %308 = add i8 %305, %307, !dbg !95, !nosanitize !2
  store i8 %308, i8* %303, !dbg !95, !nosanitize !2
  %309 = load i32, i32* @__angora_context, !dbg !95, !nosanitize !2
  %310 = xor i32 %309, 88969, !dbg !95, !nosanitize !2
  store i32 %310, i32* @__angora_prev_loc, !dbg !95, !nosanitize !2
  call void @llvm.dbg.value(metadata i32 %steps.0, metadata !31, metadata !DIExpression()), !dbg !95
  call void @llvm.dbg.value(metadata i32 0, metadata !30, metadata !DIExpression()), !dbg !65
  call void @llvm.dbg.value(metadata i32 1, metadata !32, metadata !DIExpression()), !dbg !43
  %cmp3375 = icmp slt i32 %steps.0, -1, !dbg !110
  %311 = load i32, i32* @__angora_cond_cmpid, !dbg !96, !nosanitize !2
  %312 = icmp eq i32 852927102, %311, !dbg !96, !nosanitize !2
  br i1 %312, label %313, label %318, !dbg !96, !prof !55

; <label>:313:                                    ; preds = %if.end31
  %314 = zext i32 %steps.0 to i64, !dbg !96
  %315 = zext i1 %cmp3375 to i32, !dbg !96, !nosanitize !2
  %316 = load i32, i32* @__angora_context, !dbg !96, !nosanitize !2
  %317 = call i32 @__angora_trace_cmp(i32 %315, i32 852927102, i32 %316, i64 %314, i64 4294967295), !dbg !96, !nosanitize !2
  br label %318, !dbg !96, !nosanitize !2

; <label>:318:                                    ; preds = %if.end31, %313
  br i1 %cmp3375, label %for.end49, label %for.body35.preheader, !dbg !96

for.body35.preheader:                             ; preds = %if.end31.thread, %318
  %steps.0102 = phi i32 [ -1, %if.end31.thread ], [ %steps.0, %318 ]
  %len.0.lcssa99101 = phi i32 [ -1, %if.end31.thread ], [ %inc24, %318 ]
  %319 = load i32, i32* @__angora_prev_loc, !dbg !112, !nosanitize !2
  %320 = load i8*, i8** @__angora_area_ptr, !dbg !112, !nosanitize !2
  %321 = xor i32 %319, 442613, !dbg !112, !nosanitize !2
  %322 = getelementptr i8, i8* %320, i32 %321, !dbg !112, !nosanitize !2
  %323 = load i8, i8* %322, !dbg !112, !nosanitize !2
  %324 = add i8 %323, 1, !dbg !112, !nosanitize !2
  %325 = icmp eq i8 %324, 0, !dbg !112, !nosanitize !2
  %326 = zext i1 %325 to i8, !dbg !112, !nosanitize !2
  %327 = add i8 %324, %326, !dbg !112, !nosanitize !2
  store i8 %327, i8* %322, !dbg !112, !nosanitize !2
  %328 = load i32, i32* @__angora_context, !dbg !112, !nosanitize !2
  %329 = xor i32 %328, 221306, !dbg !112, !nosanitize !2
  store i32 %329, i32* @__angora_prev_loc, !dbg !112, !nosanitize !2
  %div = sdiv i32 %steps.0102, 2, !dbg !112
  %330 = sext i32 %len.0.lcssa99101 to i64, !dbg !113
  %331 = add nsw i32 %div, 1, !dbg !113
  %wide.trip.count = zext i32 %331 to i64
  br label %for.body35, !dbg !113

for.body35:                                       ; preds = %408, %for.body35.preheader
  %indvars.iv = phi i64 [ 0, %for.body35.preheader ], [ %indvars.iv.next, %408 ]
  %pal.076 = phi i32 [ 1, %for.body35.preheader ], [ %pal.1, %408 ]
  %332 = load i32, i32* @__angora_prev_loc, !dbg !65, !nosanitize !2
  %333 = load i8*, i8** @__angora_area_ptr, !dbg !65, !nosanitize !2
  %334 = xor i32 %332, 1045320, !dbg !65, !nosanitize !2
  %335 = getelementptr i8, i8* %333, i32 %334, !dbg !65, !nosanitize !2
  %336 = load i8, i8* %335, !dbg !65, !nosanitize !2
  %337 = add i8 %336, 1, !dbg !65, !nosanitize !2
  %338 = icmp eq i8 %337, 0, !dbg !65, !nosanitize !2
  %339 = zext i1 %338 to i8, !dbg !65, !nosanitize !2
  %340 = add i8 %337, %339, !dbg !65, !nosanitize !2
  store i8 %340, i8* %335, !dbg !65, !nosanitize !2
  %341 = load i32, i32* @__angora_context, !dbg !65, !nosanitize !2
  %342 = xor i32 %341, 522660, !dbg !65, !nosanitize !2
  store i32 %342, i32* @__angora_prev_loc, !dbg !65, !nosanitize !2
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !30, metadata !DIExpression()), !dbg !65
  call void @llvm.dbg.value(metadata i32 %pal.076, metadata !32, metadata !DIExpression()), !dbg !43
  %arrayidx37 = getelementptr inbounds i8, i8* %69, i64 %indvars.iv, !dbg !116
  %343 = ptrtoint i8* %arrayidx37 to i64, !dbg !116
  %344 = lshr i64 %343, 3, !dbg !116
  %345 = add i64 %344, 2147450880, !dbg !116
  %346 = inttoptr i64 %345 to i8*, !dbg !116
  %347 = load i8, i8* %346, !dbg !116
  %348 = icmp ne i8 %347, 0, !dbg !116
  br i1 %348, label %349, label %354, !dbg !116, !prof !49

; <label>:349:                                    ; preds = %for.body35
  %350 = and i64 %343, 7, !dbg !116
  %351 = trunc i64 %350 to i8, !dbg !116
  %352 = icmp sge i8 %351, %347, !dbg !116
  br i1 %352, label %353, label %354, !dbg !116

; <label>:353:                                    ; preds = %349
  call void @__asan_report_load1(i64 %343), !dbg !116
  call void asm sideeffect "", ""()
  unreachable

; <label>:354:                                    ; preds = %349, %for.body35
  %355 = load i8, i8* %arrayidx37, align 1, !dbg !116, !tbaa !50
  %356 = xor i64 %indvars.iv, -1, !dbg !117
  %357 = add nsw i64 %330, %356, !dbg !117
  %arrayidx41 = getelementptr inbounds i8, i8* %69, i64 %357, !dbg !118
  %358 = ptrtoint i8* %arrayidx41 to i64, !dbg !118
  %359 = lshr i64 %358, 3, !dbg !118
  %360 = add i64 %359, 2147450880, !dbg !118
  %361 = inttoptr i64 %360 to i8*, !dbg !118
  %362 = load i8, i8* %361, !dbg !118
  %363 = icmp ne i8 %362, 0, !dbg !118
  br i1 %363, label %364, label %369, !dbg !118, !prof !49

; <label>:364:                                    ; preds = %354
  %365 = and i64 %358, 7, !dbg !118
  %366 = trunc i64 %365 to i8, !dbg !118
  %367 = icmp sge i8 %366, %362, !dbg !118
  br i1 %367, label %368, label %369, !dbg !118

; <label>:368:                                    ; preds = %364
  call void @__asan_report_load1(i64 %358), !dbg !118
  call void asm sideeffect "", ""()
  unreachable

; <label>:369:                                    ; preds = %364, %354
  %370 = load i8, i8* %arrayidx41, align 1, !dbg !118, !tbaa !50
  %cmp43 = icmp eq i8 %355, %370, !dbg !119
  %371 = load i32, i32* @__angora_cond_cmpid, !dbg !120, !nosanitize !2
  %372 = icmp eq i32 852931491, %371, !dbg !120, !nosanitize !2
  br i1 %372, label %373, label %379, !dbg !120, !prof !55

; <label>:373:                                    ; preds = %369
  %374 = zext i8 %355 to i64, !dbg !120
  %375 = zext i8 %370 to i64, !dbg !120
  %376 = zext i1 %cmp43 to i32, !dbg !120, !nosanitize !2
  %377 = load i32, i32* @__angora_context, !dbg !120, !nosanitize !2
  %378 = call i32 @__angora_trace_cmp(i32 %376, i32 852931491, i32 %377, i64 %374, i64 %375), !dbg !120, !nosanitize !2
  br label %379, !dbg !120, !nosanitize !2

; <label>:379:                                    ; preds = %369, %373
  br i1 %cmp43, label %if.end46, label %if.then45, !dbg !120

if.then45:                                        ; preds = %379
  %380 = load i32, i32* @__angora_prev_loc, !dbg !121, !nosanitize !2
  %381 = load i8*, i8** @__angora_area_ptr, !dbg !121, !nosanitize !2
  %382 = xor i32 %380, 516678, !dbg !121, !nosanitize !2
  %383 = getelementptr i8, i8* %381, i32 %382, !dbg !121, !nosanitize !2
  %384 = load i8, i8* %383, !dbg !121, !nosanitize !2
  %385 = add i8 %384, 1, !dbg !121, !nosanitize !2
  %386 = icmp eq i8 %385, 0, !dbg !121, !nosanitize !2
  %387 = zext i1 %386 to i8, !dbg !121, !nosanitize !2
  %388 = add i8 %385, %387, !dbg !121, !nosanitize !2
  store i8 %388, i8* %383, !dbg !121, !nosanitize !2
  %389 = load i32, i32* @__angora_context, !dbg !121, !nosanitize !2
  %390 = xor i32 %389, 258339, !dbg !121, !nosanitize !2
  store i32 %390, i32* @__angora_prev_loc, !dbg !121, !nosanitize !2
  call void @llvm.dbg.value(metadata i32 0, metadata !32, metadata !DIExpression()), !dbg !43
  br label %if.end46, !dbg !123

if.end46:                                         ; preds = %379, %if.then45
  %pal.1 = phi i32 [ 0, %if.then45 ], [ %pal.076, %379 ], !dbg !63
  %391 = load i32, i32* @__angora_prev_loc, !dbg !124, !nosanitize !2
  %392 = load i8*, i8** @__angora_area_ptr, !dbg !124, !nosanitize !2
  %393 = xor i32 %391, 914943, !dbg !124, !nosanitize !2
  %394 = getelementptr i8, i8* %392, i32 %393, !dbg !124, !nosanitize !2
  %395 = load i8, i8* %394, !dbg !124, !nosanitize !2
  %396 = add i8 %395, 1, !dbg !124, !nosanitize !2
  %397 = icmp eq i8 %396, 0, !dbg !124, !nosanitize !2
  %398 = zext i1 %397 to i8, !dbg !124, !nosanitize !2
  %399 = add i8 %396, %398, !dbg !124, !nosanitize !2
  store i8 %399, i8* %394, !dbg !124, !nosanitize !2
  %400 = load i32, i32* @__angora_context, !dbg !124, !nosanitize !2
  %401 = xor i32 %400, 457471, !dbg !124, !nosanitize !2
  store i32 %401, i32* @__angora_prev_loc, !dbg !124, !nosanitize !2
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !125
  call void @llvm.dbg.value(metadata i32 undef, metadata !30, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !65
  call void @llvm.dbg.value(metadata i32 %pal.1, metadata !32, metadata !DIExpression()), !dbg !43
  %exitcond = icmp eq i64 %indvars.iv.next, %wide.trip.count, !dbg !110
  %402 = load i32, i32* @__angora_cond_cmpid, !dbg !96, !nosanitize !2
  %403 = icmp eq i32 -1736185989, %402, !dbg !96, !nosanitize !2
  br i1 %403, label %404, label %408, !dbg !96, !prof !55

; <label>:404:                                    ; preds = %if.end46
  %405 = zext i1 %exitcond to i32, !dbg !96, !nosanitize !2
  %406 = load i32, i32* @__angora_context, !dbg !96, !nosanitize !2
  %407 = call i32 @__angora_trace_cmp(i32 %405, i32 -1736185989, i32 %406, i64 %indvars.iv.next, i64 %wide.trip.count), !dbg !96, !nosanitize !2
  br label %408, !dbg !96, !nosanitize !2

; <label>:408:                                    ; preds = %if.end46, %404
  br i1 %exitcond, label %for.end49, label %for.body35, !dbg !96, !llvm.loop !126

for.end49:                                        ; preds = %408, %318
  %pal.0.lcssa = phi i32 [ 1, %318 ], [ %pal.1, %408 ], !dbg !128
  %409 = load i32, i32* @__angora_prev_loc, !dbg !43, !nosanitize !2
  %410 = load i8*, i8** @__angora_area_ptr, !dbg !43, !nosanitize !2
  %411 = xor i32 %409, 446457, !dbg !43, !nosanitize !2
  %412 = getelementptr i8, i8* %410, i32 %411, !dbg !43, !nosanitize !2
  %413 = load i8, i8* %412, !dbg !43, !nosanitize !2
  %414 = add i8 %413, 1, !dbg !43, !nosanitize !2
  %415 = icmp eq i8 %414, 0, !dbg !43, !nosanitize !2
  %416 = zext i1 %415 to i8, !dbg !43, !nosanitize !2
  %417 = add i8 %414, %416, !dbg !43, !nosanitize !2
  store i8 %417, i8* %412, !dbg !43, !nosanitize !2
  %418 = load i32, i32* @__angora_context, !dbg !43, !nosanitize !2
  %419 = xor i32 %418, 223228, !dbg !43, !nosanitize !2
  store i32 %419, i32* @__angora_prev_loc, !dbg !43, !nosanitize !2
  call void @llvm.dbg.value(metadata i32 %pal.0.lcssa, metadata !32, metadata !DIExpression()), !dbg !43
  store i32 %2, i32* @__angora_context, !dbg !129, !nosanitize !2
  %420 = ptrtoint i64* %0 to i64, !dbg !129
  %421 = load i64, i64* %0, !dbg !129
  call void @__asan_allocas_unpoison(i64 %421, i64 %420), !dbg !129
  ret i32 %pal.0.lcssa, !dbg !129
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64, i8* nocapture) #2

; Function Attrs: argmemonly nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64, i8* nocapture) #2

; Function Attrs: nounwind sanitize_address uwtable
define i32 @main(i32 %argc, i8** nocapture readonly %argv) local_unnamed_addr #0 !dbg !130 {
entry:
  %0 = load i32, i32* @__angora_call_site, !nosanitize !2
  %1 = load i32, i32* @__angora_context, !nosanitize !2
  %2 = xor i32 %1, %0, !nosanitize !2
  store i32 %2, i32* @__angora_context, !nosanitize !2
  %asan_local_stack_base = alloca i64, !dbg !203
  %3 = load i32, i32* @__asan_option_detect_stack_use_after_return, !dbg !203
  %4 = icmp ne i32 %3, 0, !dbg !203
  br i1 %4, label %5, label %7

; <label>:5:                                      ; preds = %entry
  %6 = call i64 @__asan_stack_malloc_2(i64 192), !dbg !203
  br label %7

; <label>:7:                                      ; preds = %entry, %5
  %8 = phi i64 [ 0, %entry ], [ %6, %5 ], !dbg !203
  %9 = icmp eq i64 %8, 0, !dbg !203
  br i1 %9, label %10, label %12

; <label>:10:                                     ; preds = %7
  %MyAlloca = alloca i8, i64 192, align 32, !dbg !203
  %11 = ptrtoint i8* %MyAlloca to i64, !dbg !203
  br label %12

; <label>:12:                                     ; preds = %7, %10
  %13 = phi i64 [ %8, %7 ], [ %11, %10 ], !dbg !203
  store i64 %13, i64* %asan_local_stack_base, !dbg !203
  %14 = add i64 %13, 32, !dbg !203
  %15 = inttoptr i64 %14 to [128 x i8]*, !dbg !203
  %16 = inttoptr i64 %13 to i64*, !dbg !203
  store i64 1102416563, i64* %16, !dbg !203
  %17 = add i64 %13, 8, !dbg !203
  %18 = inttoptr i64 %17 to i64*, !dbg !203
  store i64 ptrtoint ([18 x i8]* @___asan_gen_ to i64), i64* %18, !dbg !203
  %19 = add i64 %13, 16, !dbg !203
  %20 = inttoptr i64 %19 to i64*, !dbg !203
  store i64 ptrtoint (i32 (i32, i8**)* @main to i64), i64* %20, !dbg !203
  %21 = lshr i64 %13, 3, !dbg !203
  %22 = add i64 %21, 2147450880, !dbg !203
  %23 = add i64 %22, 0, !dbg !203
  %24 = inttoptr i64 %23 to i64*, !dbg !203
  store i64 -506381209984437775, i64* %24, align 1, !dbg !203
  %25 = add i64 %22, 8, !dbg !203
  %26 = inttoptr i64 %25 to i64*, !dbg !203
  store i64 -506381209866536712, i64* %26, align 1, !dbg !203
  %27 = add i64 %22, 16, !dbg !203
  %28 = inttoptr i64 %27 to i64*, !dbg !203
  store i64 -868082073972705032, i64* %28, align 1, !dbg !203
  call void @llvm.dbg.declare(metadata i64* %asan_local_stack_base, metadata !197, metadata !DIExpression(DW_OP_deref, DW_OP_plus_uconst, 32)), !dbg !204
  call void @llvm.dbg.value(metadata i32 %argc, metadata !135, metadata !DIExpression()), !dbg !205
  call void @llvm.dbg.value(metadata i8** %argv, metadata !136, metadata !DIExpression()), !dbg !206
  %29 = getelementptr inbounds [128 x i8], [128 x i8]* %15, i64 0, i64 0, !dbg !207
  %30 = add i64 %22, 4, !dbg !207
  %31 = inttoptr i64 %30 to i64*, !dbg !207
  store i64 0, i64* %31, align 1, !dbg !207
  %32 = add i64 %22, 12, !dbg !207
  %33 = inttoptr i64 %32 to i64*, !dbg !207
  store i64 0, i64* %33, align 1, !dbg !207
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %29) #6, !dbg !207
  %cmp = icmp slt i32 %argc, 2, !dbg !208
  %34 = load i32, i32* @__angora_cond_cmpid, !dbg !210, !nosanitize !2
  %35 = icmp eq i32 852922185, %34, !dbg !210, !nosanitize !2
  br i1 %35, label %36, label %41, !dbg !210, !prof !55

; <label>:36:                                     ; preds = %12
  %37 = zext i32 %argc to i64, !dbg !210
  %38 = zext i1 %cmp to i32, !dbg !210, !nosanitize !2
  %39 = load i32, i32* @__angora_context, !dbg !210, !nosanitize !2
  %40 = call i32 @__angora_trace_cmp(i32 %38, i32 852922185, i32 %39, i64 %37, i64 2), !dbg !210, !nosanitize !2
  br label %41, !dbg !210, !nosanitize !2

; <label>:41:                                     ; preds = %12, %36
  br i1 %cmp, label %if.then, label %if.end, !dbg !210

if.then:                                          ; preds = %41
  %42 = load i32, i32* @__angora_prev_loc, !dbg !211, !nosanitize !2
  %43 = load i8*, i8** @__angora_area_ptr, !dbg !211, !nosanitize !2
  %44 = xor i32 %42, 883762, !dbg !211, !nosanitize !2
  %45 = getelementptr i8, i8* %43, i32 %44, !dbg !211, !nosanitize !2
  %46 = load i8, i8* %45, !dbg !211, !nosanitize !2
  %47 = add i8 %46, 1, !dbg !211, !nosanitize !2
  %48 = icmp eq i8 %47, 0, !dbg !211, !nosanitize !2
  %49 = zext i1 %48 to i8, !dbg !211, !nosanitize !2
  %50 = add i8 %47, %49, !dbg !211, !nosanitize !2
  store i8 %50, i8* %45, !dbg !211, !nosanitize !2
  %51 = load i32, i32* @__angora_context, !dbg !211, !nosanitize !2
  %52 = xor i32 %51, 441881, !dbg !211, !nosanitize !2
  store i32 %52, i32* @__angora_prev_loc, !dbg !211, !nosanitize !2
  br label %cleanup21, !dbg !211

if.end:                                           ; preds = %41
  %53 = load i32, i32* @__angora_prev_loc, !dbg !213, !nosanitize !2
  %54 = load i8*, i8** @__angora_area_ptr, !dbg !213, !nosanitize !2
  %55 = xor i32 %53, 97830, !dbg !213, !nosanitize !2
  %56 = getelementptr i8, i8* %54, i32 %55, !dbg !213, !nosanitize !2
  %57 = load i8, i8* %56, !dbg !213, !nosanitize !2
  %58 = add i8 %57, 1, !dbg !213, !nosanitize !2
  %59 = icmp eq i8 %58, 0, !dbg !213, !nosanitize !2
  %60 = zext i1 %59 to i8, !dbg !213, !nosanitize !2
  %61 = add i8 %58, %60, !dbg !213, !nosanitize !2
  store i8 %61, i8* %56, !dbg !213, !nosanitize !2
  %62 = load i32, i32* @__angora_context, !dbg !213, !nosanitize !2
  %63 = xor i32 %62, 48915, !dbg !213, !nosanitize !2
  store i32 %63, i32* @__angora_prev_loc, !dbg !213, !nosanitize !2
  %arrayidx = getelementptr inbounds i8*, i8** %argv, i64 1, !dbg !213
  %64 = ptrtoint i8** %arrayidx to i64, !dbg !213
  %65 = lshr i64 %64, 3, !dbg !213
  %66 = add i64 %65, 2147450880, !dbg !213
  %67 = inttoptr i64 %66 to i8*, !dbg !213
  %68 = load i8, i8* %67, !dbg !213
  %69 = icmp ne i8 %68, 0, !dbg !213
  br i1 %69, label %70, label %71, !dbg !213

; <label>:70:                                     ; preds = %if.end
  call void @__asan_report_load8(i64 %64), !dbg !213
  call void asm sideeffect "", ""(), !dbg !213
  unreachable, !dbg !213

; <label>:71:                                     ; preds = %if.end
  %72 = load i8*, i8** %arrayidx, align 8, !dbg !213, !tbaa !214
  store i32 598632, i32* @__angora_call_site, !dbg !216, !nosanitize !2
  %call = tail call %struct._IO_FILE* @fopen(i8* %72, i8* getelementptr inbounds ({ [3 x i8], [61 x i8] }, { [3 x i8], [61 x i8] }* @.str, i32 0, i32 0, i64 0)), !dbg !216
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %call, metadata !137, metadata !DIExpression()), !dbg !217
  %tobool = icmp eq %struct._IO_FILE* %call, null, !dbg !218
  %73 = load i32, i32* @__angora_cond_cmpid, !dbg !220, !nosanitize !2
  %74 = icmp eq i32 852918027, %73, !dbg !220, !nosanitize !2
  br i1 %74, label %75, label %80, !dbg !220, !prof !55

; <label>:75:                                     ; preds = %71
  %76 = ptrtoint %struct._IO_FILE* %call to i64, !dbg !220
  %77 = zext i1 %tobool to i32, !dbg !220, !nosanitize !2
  %78 = load i32, i32* @__angora_context, !dbg !220, !nosanitize !2
  %79 = call i32 @__angora_trace_cmp(i32 %77, i32 852918027, i32 %78, i64 %76, i64 0), !dbg !220, !nosanitize !2
  br label %80, !dbg !220, !nosanitize !2

; <label>:80:                                     ; preds = %71, %75
  br i1 %tobool, label %if.then1, label %if.end3, !dbg !220

if.then1:                                         ; preds = %80
  %81 = load i32, i32* @__angora_prev_loc, !dbg !221, !nosanitize !2
  %82 = load i8*, i8** @__angora_area_ptr, !dbg !221, !nosanitize !2
  %83 = xor i32 %81, 867482, !dbg !221, !nosanitize !2
  %84 = getelementptr i8, i8* %82, i32 %83, !dbg !221, !nosanitize !2
  %85 = load i8, i8* %84, !dbg !221, !nosanitize !2
  %86 = add i8 %85, 1, !dbg !221, !nosanitize !2
  %87 = icmp eq i8 %86, 0, !dbg !221, !nosanitize !2
  %88 = zext i1 %87 to i8, !dbg !221, !nosanitize !2
  %89 = add i8 %86, %88, !dbg !221, !nosanitize !2
  store i8 %89, i8* %84, !dbg !221, !nosanitize !2
  %90 = load i32, i32* @__angora_context, !dbg !221, !nosanitize !2
  %91 = xor i32 %90, 433741, !dbg !221, !nosanitize !2
  store i32 %91, i32* @__angora_prev_loc, !dbg !221, !nosanitize !2
  store i32 1017473, i32* @__angora_call_site, !dbg !221, !nosanitize !2
  %puts = tail call i32 @puts(i8* getelementptr inbounds ({ [24 x i8], [40 x i8] }, { [24 x i8], [40 x i8] }* @.str.2, i32 0, i32 0, i64 0)), !dbg !221
  br label %if.end3, !dbg !223

if.end3:                                          ; preds = %80, %if.then1
  %92 = load i32, i32* @__angora_prev_loc, !dbg !224, !nosanitize !2
  %93 = load i8*, i8** @__angora_area_ptr, !dbg !224, !nosanitize !2
  %94 = xor i32 %92, 831685, !dbg !224, !nosanitize !2
  %95 = getelementptr i8, i8* %93, i32 %94, !dbg !224, !nosanitize !2
  %96 = load i8, i8* %95, !dbg !224, !nosanitize !2
  %97 = add i8 %96, 1, !dbg !224, !nosanitize !2
  %98 = icmp eq i8 %97, 0, !dbg !224, !nosanitize !2
  %99 = zext i1 %98 to i8, !dbg !224, !nosanitize !2
  %100 = add i8 %97, %99, !dbg !224, !nosanitize !2
  store i8 %100, i8* %95, !dbg !224, !nosanitize !2
  %101 = load i32, i32* @__angora_context, !dbg !224, !nosanitize !2
  %102 = xor i32 %101, 415842, !dbg !224, !nosanitize !2
  store i32 %102, i32* @__angora_prev_loc, !dbg !224, !nosanitize !2
  store i32 901926, i32* @__angora_call_site, !dbg !225, !nosanitize !2
  %103 = call i64 @fread_unlocked(i8* nonnull %29, i64 1, i64 128, %struct._IO_FILE* %call), !dbg !225
  call void @llvm.dbg.value(metadata i64 %103, metadata !202, metadata !DIExpression()), !dbg !226
  store i32 383847, i32* @__angora_call_site, !dbg !227, !nosanitize !2
  %call5 = tail call i32 @fclose(%struct._IO_FILE* %call), !dbg !227
  %cmp6 = icmp ult i64 %103, 128, !dbg !228
  %104 = load i32, i32* @__angora_cond_cmpid, !dbg !230, !nosanitize !2
  %105 = icmp eq i32 852921525, %104, !dbg !230, !nosanitize !2
  br i1 %105, label %106, label %110, !dbg !230, !prof !55

; <label>:106:                                    ; preds = %if.end3
  %107 = zext i1 %cmp6 to i32, !dbg !230, !nosanitize !2
  %108 = load i32, i32* @__angora_context, !dbg !230, !nosanitize !2
  %109 = call i32 @__angora_trace_cmp(i32 %107, i32 852921525, i32 %108, i64 %103, i64 128), !dbg !230, !nosanitize !2
  br label %110, !dbg !230, !nosanitize !2

; <label>:110:                                    ; preds = %if.end3, %106
  br i1 %cmp6, label %if.then7, label %if.end9, !dbg !230

if.then7:                                         ; preds = %110
  %111 = load i32, i32* @__angora_prev_loc, !dbg !231, !nosanitize !2
  %112 = load i8*, i8** @__angora_area_ptr, !dbg !231, !nosanitize !2
  %113 = xor i32 %111, 438874, !dbg !231, !nosanitize !2
  %114 = getelementptr i8, i8* %112, i32 %113, !dbg !231, !nosanitize !2
  %115 = load i8, i8* %114, !dbg !231, !nosanitize !2
  %116 = add i8 %115, 1, !dbg !231, !nosanitize !2
  %117 = icmp eq i8 %116, 0, !dbg !231, !nosanitize !2
  %118 = zext i1 %117 to i8, !dbg !231, !nosanitize !2
  %119 = add i8 %116, %118, !dbg !231, !nosanitize !2
  store i8 %119, i8* %114, !dbg !231, !nosanitize !2
  %120 = load i32, i32* @__angora_context, !dbg !231, !nosanitize !2
  %121 = xor i32 %120, 219437, !dbg !231, !nosanitize !2
  store i32 %121, i32* @__angora_prev_loc, !dbg !231, !nosanitize !2
  store i32 130324, i32* @__angora_call_site, !dbg !231, !nosanitize !2
  %puts32 = tail call i32 @puts(i8* getelementptr inbounds ({ [24 x i8], [40 x i8] }, { [24 x i8], [40 x i8] }* @.str.3, i32 0, i32 0, i64 0)), !dbg !231
  br label %cleanup21, !dbg !233

if.end9:                                          ; preds = %110
  %122 = load i32, i32* @__angora_prev_loc, !dbg !234, !nosanitize !2
  %123 = load i8*, i8** @__angora_area_ptr, !dbg !234, !nosanitize !2
  %124 = xor i32 %122, 639149, !dbg !234, !nosanitize !2
  %125 = getelementptr i8, i8* %123, i32 %124, !dbg !234, !nosanitize !2
  %126 = load i8, i8* %125, !dbg !234, !nosanitize !2
  %127 = add i8 %126, 1, !dbg !234, !nosanitize !2
  %128 = icmp eq i8 %127, 0, !dbg !234, !nosanitize !2
  %129 = zext i1 %128 to i8, !dbg !234, !nosanitize !2
  %130 = add i8 %127, %129, !dbg !234, !nosanitize !2
  store i8 %130, i8* %125, !dbg !234, !nosanitize !2
  %131 = load i32, i32* @__angora_context, !dbg !234, !nosanitize !2
  %132 = xor i32 %131, 319574, !dbg !234, !nosanitize !2
  store i32 %132, i32* @__angora_prev_loc, !dbg !234, !nosanitize !2
  store i32 854461, i32* @__angora_call_site, !dbg !235, !nosanitize !2
  %call11 = call i32 @check_palindrome(i8* nonnull %29), !dbg !235
  call void @llvm.dbg.value(metadata i32 %call11, metadata !201, metadata !DIExpression()), !dbg !236
  %cmp12 = icmp eq i32 %call11, 1, !dbg !237
  %133 = load i32, i32* @__angora_cond_cmpid, !dbg !239, !nosanitize !2
  %134 = icmp eq i32 852925023, %133, !dbg !239, !nosanitize !2
  br i1 %134, label %135, label %140, !dbg !239, !prof !55

; <label>:135:                                    ; preds = %if.end9
  %136 = zext i32 %call11 to i64, !dbg !239
  %137 = zext i1 %cmp12 to i32, !dbg !239, !nosanitize !2
  %138 = load i32, i32* @__angora_context, !dbg !239, !nosanitize !2
  %139 = call i32 @__angora_trace_cmp(i32 %137, i32 852925023, i32 %138, i64 %136, i64 1), !dbg !239, !nosanitize !2
  br label %140, !dbg !239, !nosanitize !2

; <label>:140:                                    ; preds = %if.end9, %135
  br i1 %cmp12, label %if.then13, label %if.else, !dbg !239

if.then13:                                        ; preds = %140
  %141 = load i32, i32* @__angora_prev_loc, !dbg !240, !nosanitize !2
  %142 = load i8*, i8** @__angora_area_ptr, !dbg !240, !nosanitize !2
  %143 = xor i32 %141, 339145, !dbg !240, !nosanitize !2
  %144 = getelementptr i8, i8* %142, i32 %143, !dbg !240, !nosanitize !2
  %145 = load i8, i8* %144, !dbg !240, !nosanitize !2
  %146 = add i8 %145, 1, !dbg !240, !nosanitize !2
  %147 = icmp eq i8 %146, 0, !dbg !240, !nosanitize !2
  %148 = zext i1 %147 to i8, !dbg !240, !nosanitize !2
  %149 = add i8 %146, %148, !dbg !240, !nosanitize !2
  store i8 %149, i8* %144, !dbg !240, !nosanitize !2
  %150 = load i32, i32* @__angora_context, !dbg !240, !nosanitize !2
  %151 = xor i32 %150, 169572, !dbg !240, !nosanitize !2
  store i32 %151, i32* @__angora_prev_loc, !dbg !240, !nosanitize !2
  store i32 191410, i32* @__angora_call_site, !dbg !240, !nosanitize !2
  call void @__asan_handle_no_return(), !dbg !240
  tail call void @exit(i32 1) #9, !dbg !240
  unreachable, !dbg !240

if.else:                                          ; preds = %140
  %152 = load i32, i32* @__angora_prev_loc, !dbg !242, !nosanitize !2
  %153 = load i8*, i8** @__angora_area_ptr, !dbg !242, !nosanitize !2
  %154 = xor i32 %152, 272033, !dbg !242, !nosanitize !2
  %155 = getelementptr i8, i8* %153, i32 %154, !dbg !242, !nosanitize !2
  %156 = load i8, i8* %155, !dbg !242, !nosanitize !2
  %157 = add i8 %156, 1, !dbg !242, !nosanitize !2
  %158 = icmp eq i8 %157, 0, !dbg !242, !nosanitize !2
  %159 = zext i1 %158 to i8, !dbg !242, !nosanitize !2
  %160 = add i8 %157, %159, !dbg !242, !nosanitize !2
  store i8 %160, i8* %155, !dbg !242, !nosanitize !2
  %161 = load i32, i32* @__angora_context, !dbg !242, !nosanitize !2
  %162 = xor i32 %161, 136016, !dbg !242, !nosanitize !2
  store i32 %162, i32* @__angora_prev_loc, !dbg !242, !nosanitize !2
  %cmp14 = icmp eq i32 %call11, 0, !dbg !244
  %163 = load i32, i32* @__angora_cond_cmpid, !dbg !245, !nosanitize !2
  %164 = icmp eq i32 852932712, %163, !dbg !245, !nosanitize !2
  br i1 %164, label %165, label %170, !dbg !245, !prof !55

; <label>:165:                                    ; preds = %if.else
  %166 = zext i32 %call11 to i64, !dbg !245
  %167 = zext i1 %cmp14 to i32, !dbg !245, !nosanitize !2
  %168 = load i32, i32* @__angora_context, !dbg !245, !nosanitize !2
  %169 = call i32 @__angora_trace_cmp(i32 %167, i32 852932712, i32 %168, i64 %166, i64 0), !dbg !245, !nosanitize !2
  br label %170, !dbg !245, !nosanitize !2

; <label>:170:                                    ; preds = %if.else, %165
  br i1 %cmp14, label %if.then15, label %if.else17, !dbg !245

if.then15:                                        ; preds = %170
  %171 = load i32, i32* @__angora_prev_loc, !dbg !246, !nosanitize !2
  %172 = load i8*, i8** @__angora_area_ptr, !dbg !246, !nosanitize !2
  %173 = xor i32 %171, 929272, !dbg !246, !nosanitize !2
  %174 = getelementptr i8, i8* %172, i32 %173, !dbg !246, !nosanitize !2
  %175 = load i8, i8* %174, !dbg !246, !nosanitize !2
  %176 = add i8 %175, 1, !dbg !246, !nosanitize !2
  %177 = icmp eq i8 %176, 0, !dbg !246, !nosanitize !2
  %178 = zext i1 %177 to i8, !dbg !246, !nosanitize !2
  %179 = add i8 %176, %178, !dbg !246, !nosanitize !2
  store i8 %179, i8* %174, !dbg !246, !nosanitize !2
  %180 = load i32, i32* @__angora_context, !dbg !246, !nosanitize !2
  %181 = xor i32 %180, 464636, !dbg !246, !nosanitize !2
  store i32 %181, i32* @__angora_prev_loc, !dbg !246, !nosanitize !2
  store i32 706307, i32* @__angora_call_site, !dbg !246, !nosanitize !2
  %puts31 = tail call i32 @puts(i8* getelementptr inbounds ({ [34 x i8], [62 x i8] }, { [34 x i8], [62 x i8] }* @.str.4, i32 0, i32 0, i64 0)), !dbg !246
  br label %cleanup21, !dbg !248

if.else17:                                        ; preds = %170
  %182 = load i32, i32* @__angora_prev_loc, !dbg !249, !nosanitize !2
  %183 = load i8*, i8** @__angora_area_ptr, !dbg !249, !nosanitize !2
  %184 = xor i32 %182, 708199, !dbg !249, !nosanitize !2
  %185 = getelementptr i8, i8* %183, i32 %184, !dbg !249, !nosanitize !2
  %186 = load i8, i8* %185, !dbg !249, !nosanitize !2
  %187 = add i8 %186, 1, !dbg !249, !nosanitize !2
  %188 = icmp eq i8 %187, 0, !dbg !249, !nosanitize !2
  %189 = zext i1 %188 to i8, !dbg !249, !nosanitize !2
  %190 = add i8 %187, %189, !dbg !249, !nosanitize !2
  store i8 %190, i8* %185, !dbg !249, !nosanitize !2
  %191 = load i32, i32* @__angora_context, !dbg !249, !nosanitize !2
  %192 = xor i32 %191, 354099, !dbg !249, !nosanitize !2
  store i32 %192, i32* @__angora_prev_loc, !dbg !249, !nosanitize !2
  store i32 775808, i32* @__angora_call_site, !dbg !249, !nosanitize !2
  %puts30 = tail call i32 @puts(i8* getelementptr inbounds ({ [30 x i8], [34 x i8] }, { [30 x i8], [34 x i8] }* @.str.5, i32 0, i32 0, i64 0)), !dbg !249
  br label %cleanup21

cleanup21:                                        ; preds = %if.then7, %if.then15, %if.else17, %if.then
  %193 = load i32, i32* @__angora_prev_loc, !dbg !251, !nosanitize !2
  %194 = load i8*, i8** @__angora_area_ptr, !dbg !251, !nosanitize !2
  %195 = xor i32 %193, 563109, !dbg !251, !nosanitize !2
  %196 = getelementptr i8, i8* %194, i32 %195, !dbg !251, !nosanitize !2
  %197 = load i8, i8* %196, !dbg !251, !nosanitize !2
  %198 = add i8 %197, 1, !dbg !251, !nosanitize !2
  %199 = icmp eq i8 %198, 0, !dbg !251, !nosanitize !2
  %200 = zext i1 %199 to i8, !dbg !251, !nosanitize !2
  %201 = add i8 %198, %200, !dbg !251, !nosanitize !2
  store i8 %201, i8* %196, !dbg !251, !nosanitize !2
  %202 = load i32, i32* @__angora_context, !dbg !251, !nosanitize !2
  %203 = xor i32 %202, 281554, !dbg !251, !nosanitize !2
  store i32 %203, i32* @__angora_prev_loc, !dbg !251, !nosanitize !2
  %204 = add i64 %22, 4, !dbg !251
  %205 = inttoptr i64 %204 to i64*, !dbg !251
  store i64 -506381209866536712, i64* %205, align 1, !dbg !251
  %206 = add i64 %22, 12, !dbg !251
  %207 = inttoptr i64 %206 to i64*, !dbg !251
  store i64 -506381209866536712, i64* %207, align 1, !dbg !251
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %29) #6, !dbg !251
  store i32 %1, i32* @__angora_context, !dbg !251, !nosanitize !2
  store i64 1172321806, i64* %16, !dbg !251
  %208 = icmp ne i64 %8, 0, !dbg !251
  br i1 %208, label %209, label %222, !dbg !251

; <label>:209:                                    ; preds = %cleanup21
  %210 = add i64 %22, 0, !dbg !251
  %211 = inttoptr i64 %210 to i64*, !dbg !251
  store i64 -723401728380766731, i64* %211, align 1, !dbg !251
  %212 = add i64 %22, 8, !dbg !251
  %213 = inttoptr i64 %212 to i64*, !dbg !251
  store i64 -723401728380766731, i64* %213, align 1, !dbg !251
  %214 = add i64 %22, 16, !dbg !251
  %215 = inttoptr i64 %214 to i64*, !dbg !251
  store i64 -723401728380766731, i64* %215, align 1, !dbg !251
  %216 = add i64 %22, 24, !dbg !251
  %217 = inttoptr i64 %216 to i64*, !dbg !251
  store i64 -723401728380766731, i64* %217, align 1, !dbg !251
  %218 = add i64 %8, 248, !dbg !251
  %219 = inttoptr i64 %218 to i64*, !dbg !251
  %220 = load i64, i64* %219, !dbg !251
  %221 = inttoptr i64 %220 to i8*, !dbg !251
  store i8 0, i8* %221, !dbg !251
  br label %229, !dbg !251

; <label>:222:                                    ; preds = %cleanup21
  %223 = add i64 %22, 0, !dbg !251
  %224 = inttoptr i64 %223 to i64*, !dbg !251
  store i64 0, i64* %224, align 1, !dbg !251
  %225 = add i64 %22, 8, !dbg !251
  %226 = inttoptr i64 %225 to i64*, !dbg !251
  store i64 0, i64* %226, align 1, !dbg !251
  %227 = add i64 %22, 16, !dbg !251
  %228 = inttoptr i64 %227 to i64*, !dbg !251
  store i64 0, i64* %228, align 1, !dbg !251
  br label %229, !dbg !251

; <label>:229:                                    ; preds = %222, %209
  ret i32 0, !dbg !251
}

; Function Attrs: nounwind
declare noalias %struct._IO_FILE* @fopen(i8* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #4

; Function Attrs: nounwind
declare i32 @fclose(%struct._IO_FILE* nocapture) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @exit(i32) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @__unfold_branch_fn(i32) local_unnamed_addr #6

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #6

; Function Attrs: nounwind
declare i64 @fread_unlocked(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) local_unnamed_addr #6

; Function Attrs: nounwind readnone
declare i32 @__angora_trace_cmp(i32, i32, i32, i64, i64) #7

; Function Attrs: nounwind readnone
declare i64 @__angora_trace_switch(i32, i32, i64) #7

declare void @__asan_report_load_n(i64, i64)

declare void @__asan_loadN(i64, i64)

declare void @__asan_report_load1(i64)

declare void @__asan_load1(i64)

declare void @__asan_report_load2(i64)

declare void @__asan_load2(i64)

declare void @__asan_report_load4(i64)

declare void @__asan_load4(i64)

declare void @__asan_report_load8(i64)

declare void @__asan_load8(i64)

declare void @__asan_report_load16(i64)

declare void @__asan_load16(i64)

declare void @__asan_report_store_n(i64, i64)

declare void @__asan_storeN(i64, i64)

declare void @__asan_report_store1(i64)

declare void @__asan_store1(i64)

declare void @__asan_report_store2(i64)

declare void @__asan_store2(i64)

declare void @__asan_report_store4(i64)

declare void @__asan_store4(i64)

declare void @__asan_report_store8(i64)

declare void @__asan_store8(i64)

declare void @__asan_report_store16(i64)

declare void @__asan_store16(i64)

declare void @__asan_report_exp_load_n(i64, i64, i32)

declare void @__asan_exp_loadN(i64, i64, i32)

declare void @__asan_report_exp_load1(i64, i32)

declare void @__asan_exp_load1(i64, i32)

declare void @__asan_report_exp_load2(i64, i32)

declare void @__asan_exp_load2(i64, i32)

declare void @__asan_report_exp_load4(i64, i32)

declare void @__asan_exp_load4(i64, i32)

declare void @__asan_report_exp_load8(i64, i32)

declare void @__asan_exp_load8(i64, i32)

declare void @__asan_report_exp_load16(i64, i32)

declare void @__asan_exp_load16(i64, i32)

declare void @__asan_report_exp_store_n(i64, i64, i32)

declare void @__asan_exp_storeN(i64, i64, i32)

declare void @__asan_report_exp_store1(i64, i32)

declare void @__asan_exp_store1(i64, i32)

declare void @__asan_report_exp_store2(i64, i32)

declare void @__asan_exp_store2(i64, i32)

declare void @__asan_report_exp_store4(i64, i32)

declare void @__asan_exp_store4(i64, i32)

declare void @__asan_report_exp_store8(i64, i32)

declare void @__asan_exp_store8(i64, i32)

declare void @__asan_report_exp_store16(i64, i32)

declare void @__asan_exp_store16(i64, i32)

declare i8* @__asan_memmove(i8*, i8*, i64)

declare i8* @__asan_memcpy(i8*, i8*, i64)

declare i8* @__asan_memset(i8*, i32, i64)

declare void @__asan_handle_no_return()

declare void @__sanitizer_ptr_cmp(i64, i64)

declare void @__sanitizer_ptr_sub(i64, i64)

declare i64 @__asan_stack_malloc_0(i64)

declare void @__asan_stack_free_0(i64, i64)

declare i64 @__asan_stack_malloc_1(i64)

declare void @__asan_stack_free_1(i64, i64)

declare i64 @__asan_stack_malloc_2(i64)

declare void @__asan_stack_free_2(i64, i64)

declare i64 @__asan_stack_malloc_3(i64)

declare void @__asan_stack_free_3(i64, i64)

declare i64 @__asan_stack_malloc_4(i64)

declare void @__asan_stack_free_4(i64, i64)

declare i64 @__asan_stack_malloc_5(i64)

declare void @__asan_stack_free_5(i64, i64)

declare i64 @__asan_stack_malloc_6(i64)

declare void @__asan_stack_free_6(i64, i64)

declare i64 @__asan_stack_malloc_7(i64)

declare void @__asan_stack_free_7(i64, i64)

declare i64 @__asan_stack_malloc_8(i64)

declare void @__asan_stack_free_8(i64, i64)

declare i64 @__asan_stack_malloc_9(i64)

declare void @__asan_stack_free_9(i64, i64)

declare i64 @__asan_stack_malloc_10(i64)

declare void @__asan_stack_free_10(i64, i64)

declare void @__asan_poison_stack_memory(i64, i64)

declare void @__asan_unpoison_stack_memory(i64, i64)

declare void @__asan_set_shadow_00(i64, i64)

declare void @__asan_set_shadow_f1(i64, i64)

declare void @__asan_set_shadow_f2(i64, i64)

declare void @__asan_set_shadow_f3(i64, i64)

declare void @__asan_set_shadow_f5(i64, i64)

declare void @__asan_set_shadow_f8(i64, i64)

declare void @__asan_alloca_poison(i64, i64)

declare void @__asan_allocas_unpoison(i64, i64)

declare void @__asan_before_dynamic_init(i64)

declare void @__asan_after_dynamic_init()

declare void @__asan_register_globals(i64, i64)

declare void @__asan_unregister_globals(i64, i64)

declare void @__asan_register_image_globals(i64)

declare void @__asan_unregister_image_globals(i64)

declare void @__asan_register_elf_globals(i64, i64, i64)

declare void @__asan_unregister_elf_globals(i64, i64, i64)

declare void @__asan_init()

define internal void @asan.module_ctor() {
  call void @__asan_init()
  call void @__asan_version_mismatch_check_v8()
  call void @__asan_register_globals(i64 ptrtoint ([5 x { i64, i64, i64, i64, i64, i64, i64, i64 }]* @0 to i64), i64 5)
  ret void
}

declare void @__asan_version_mismatch_check_v8()

define internal void @asan.module_dtor() {
  call void @__asan_unregister_globals(i64 ptrtoint ([5 x { i64, i64, i64, i64, i64, i64, i64, i64 }]* @0 to i64), i64 5)
  ret void
}

attributes #0 = { nounwind sanitize_address uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { argmemonly nounwind }
attributes #3 = { argmemonly nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { nounwind readnone }
attributes #8 = { nobuiltin nounwind readonly }
attributes #9 = { noreturn nounwind }

!llvm.dbg.cu = !{!0}
!llvm.asan.globals = !{!5, !7, !9, !11, !13, !15}
!llvm.module.flags = !{!17, !18, !19, !20}
!llvm.ident = !{!21}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 7.0.1 (tags/RELEASE_701/final)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !3)
!1 = !DIFile(filename: "palindrome/palindrome.c", directory: "/home/seshagiri/work/angora/tests/test_dataset")
!2 = !{}
!3 = !{!4}
!4 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!5 = !{[3 x i8]* getelementptr inbounds ({ [3 x i8], [61 x i8] }, { [3 x i8], [61 x i8] }* @.str, i32 0, i32 0), !6, !"<string literal>", i1 false, i1 false}
!6 = !{!"palindrome/palindrome.c", i32 69, i32 25}
!7 = distinct !{null, !8, !"<string literal>", i1 false, i1 false}
!8 = !{!"palindrome/palindrome.c", i32 72, i32 16}
!9 = !{[24 x i8]* getelementptr inbounds ({ [24 x i8], [40 x i8] }, { [24 x i8], [40 x i8] }* @.str.2, i32 0, i32 0), !10, !"<string literal>", i1 false, i1 false}
!10 = !{!"palindrome/palindrome.c", i32 72, i32 24}
!11 = !{[24 x i8]* getelementptr inbounds ({ [24 x i8], [40 x i8] }, { [24 x i8], [40 x i8] }* @.str.3, i32 0, i32 0), !12, !"<string literal>", i1 false, i1 false}
!12 = !{!"palindrome/palindrome.c", i32 79, i32 24}
!13 = !{[34 x i8]* getelementptr inbounds ({ [34 x i8], [62 x i8] }, { [34 x i8], [62 x i8] }* @.str.4, i32 0, i32 0), !14, !"<string literal>", i1 false, i1 false}
!14 = !{!"palindrome/palindrome.c", i32 88, i32 24}
!15 = !{[30 x i8]* getelementptr inbounds ({ [30 x i8], [34 x i8] }, { [30 x i8], [34 x i8] }* @.str.5, i32 0, i32 0), !16, !"<string literal>", i1 false, i1 false}
!16 = !{!"palindrome/palindrome.c", i32 90, i32 24}
!17 = !{i32 2, !"Dwarf Version", i32 4}
!18 = !{i32 2, !"Debug Info Version", i32 3}
!19 = !{i32 1, !"wchar_size", i32 4}
!20 = !{i32 7, !"PIC Level", i32 1}
!21 = !{!"clang version 7.0.1 (tags/RELEASE_701/final)"}
!22 = distinct !DISubprogram(name: "check_palindrome", scope: !1, file: !1, line: 16, type: !23, isLocal: false, isDefinition: true, scopeLine: 16, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !27)
!23 = !DISubroutineType(types: !24)
!24 = !{!4, !25}
!25 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !26, size: 64)
!26 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!27 = !{!28, !29, !30, !31, !32, !33, !34, !35, !37}
!28 = !DILocalVariable(name: "buf", arg: 1, scope: !22, file: !1, line: 16, type: !25)
!29 = !DILocalVariable(name: "len", scope: !22, file: !1, line: 17, type: !4)
!30 = !DILocalVariable(name: "i", scope: !22, file: !1, line: 18, type: !4)
!31 = !DILocalVariable(name: "steps", scope: !22, file: !1, line: 19, type: !4)
!32 = !DILocalVariable(name: "pal", scope: !22, file: !1, line: 20, type: !4)
!33 = !DILocalVariable(name: "n", scope: !22, file: !1, line: 21, type: !4)
!34 = !DILocalVariable(name: "array_len", scope: !22, file: !1, line: 22, type: !4)
!35 = !DILocalVariable(name: "__vla_expr", scope: !22, type: !36, flags: DIFlagArtificial)
!36 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!37 = !DILocalVariable(name: "string", scope: !22, file: !1, line: 30, type: !38)
!38 = !DICompositeType(tag: DW_TAG_array_type, baseType: !26, elements: !39)
!39 = !{!40}
!40 = !DISubrange(count: !35)
!41 = !DILocation(line: 16, column: 28, scope: !22)
!42 = !DILocation(line: 17, column: 9, scope: !22)
!43 = !DILocation(line: 20, column: 9, scope: !22)
!44 = !DILocation(line: 21, column: 19, scope: !22)
!45 = !DILocation(line: 21, column: 13, scope: !22)
!46 = !DILocation(line: 21, column: 9, scope: !22)
!47 = !DILocation(line: 24, column: 9, scope: !48)
!48 = distinct !DILexicalBlock(scope: !22, file: !1, line: 24, column: 9)
!49 = !{!"branch_weights", i32 1, i32 100000}
!50 = !{!51, !51, i64 0}
!51 = !{!"omnipotent char", !52, i64 0}
!52 = !{!"Simple C/C++ TBAA"}
!53 = !DILocation(line: 24, column: 16, scope: !48)
!54 = !DILocation(line: 24, column: 9, scope: !22)
!55 = !{!"branch_weights", i32 1, i32 1000}
!56 = !DILocation(line: 25, column: 19, scope: !57)
!57 = distinct !DILexicalBlock(scope: !48, file: !1, line: 24, column: 24)
!58 = !DILocation(line: 22, column: 9, scope: !22)
!59 = !DILocation(line: 26, column: 5, scope: !57)
!60 = !DILocation(line: 27, column: 19, scope: !61)
!61 = distinct !DILexicalBlock(scope: !48, file: !1, line: 26, column: 12)
!62 = !DILocation(line: 30, column: 5, scope: !22)
!63 = !DILocation(line: 0, scope: !22)
!64 = !DILocation(line: 30, column: 10, scope: !22)
!65 = !DILocation(line: 18, column: 9, scope: !22)
!66 = !DILocation(line: 32, column: 19, scope: !67)
!67 = distinct !DILexicalBlock(scope: !68, file: !1, line: 32, column: 5)
!68 = distinct !DILexicalBlock(scope: !22, file: !1, line: 32, column: 5)
!69 = !DILocation(line: 32, column: 5, scope: !68)
!70 = !DILocation(line: 36, column: 12, scope: !71)
!71 = distinct !DILexicalBlock(scope: !22, file: !1, line: 36, column: 5)
!72 = !DILocation(line: 36, column: 5, scope: !71)
!73 = !DILocation(line: 33, column: 16, scope: !74)
!74 = distinct !DILexicalBlock(scope: !67, file: !1, line: 32, column: 29)
!75 = !DILocation(line: 33, column: 9, scope: !74)
!76 = !DILocation(line: 33, column: 19, scope: !74)
!77 = !DILocation(line: 32, column: 25, scope: !67)
!78 = distinct !{!78, !69, !79}
!79 = !DILocation(line: 34, column: 5, scope: !68)
!80 = !DILocation(line: 37, column: 21, scope: !81)
!81 = distinct !DILexicalBlock(scope: !82, file: !1, line: 36, column: 29)
!82 = distinct !DILexicalBlock(scope: !71, file: !1, line: 36, column: 5)
!83 = !DILocation(line: 37, column: 9, scope: !81)
!84 = !DILocation(line: 37, column: 19, scope: !81)
!85 = !DILocation(line: 36, column: 25, scope: !82)
!86 = !DILocation(line: 36, column: 19, scope: !82)
!87 = distinct !{!87, !72, !88}
!88 = !DILocation(line: 38, column: 5, scope: !71)
!89 = !DILocation(line: 40, column: 12, scope: !90)
!90 = distinct !DILexicalBlock(scope: !22, file: !1, line: 40, column: 5)
!91 = !DILocation(line: 40, column: 17, scope: !92)
!92 = distinct !DILexicalBlock(scope: !90, file: !1, line: 40, column: 5)
!93 = !DILocation(line: 40, column: 27, scope: !92)
!94 = !DILocation(line: 40, column: 5, scope: !90)
!95 = !DILocation(line: 19, column: 9, scope: !22)
!96 = !DILocation(line: 49, column: 5, scope: !97)
!97 = distinct !DILexicalBlock(scope: !22, file: !1, line: 49, column: 5)
!98 = !DILocation(line: 41, column: 12, scope: !99)
!99 = distinct !DILexicalBlock(scope: !92, file: !1, line: 40, column: 41)
!100 = !DILocation(line: 40, column: 37, scope: !92)
!101 = distinct !{!101, !94, !102}
!102 = !DILocation(line: 42, column: 5, scope: !90)
!103 = !DILocation(line: 45, column: 13, scope: !104)
!104 = distinct !DILexicalBlock(scope: !22, file: !1, line: 45, column: 9)
!105 = !DILocation(line: 45, column: 17, scope: !104)
!106 = !DILocation(line: 45, column: 9, scope: !22)
!107 = !DILocation(line: 46, column: 14, scope: !108)
!108 = distinct !DILexicalBlock(scope: !104, file: !1, line: 45, column: 23)
!109 = !DILocation(line: 47, column: 5, scope: !108)
!110 = !DILocation(line: 49, column: 19, scope: !111)
!111 = distinct !DILexicalBlock(scope: !97, file: !1, line: 49, column: 5)
!112 = !DILocation(line: 49, column: 27, scope: !111)
!113 = !DILocation(line: 50, column: 20, scope: !114)
!114 = distinct !DILexicalBlock(scope: !115, file: !1, line: 50, column: 13)
!115 = distinct !DILexicalBlock(scope: !111, file: !1, line: 49, column: 36)
!116 = !DILocation(line: 50, column: 13, scope: !114)
!117 = !DILocation(line: 50, column: 41, scope: !114)
!118 = !DILocation(line: 50, column: 26, scope: !114)
!119 = !DILocation(line: 50, column: 23, scope: !114)
!120 = !DILocation(line: 50, column: 13, scope: !115)
!121 = !DILocation(line: 51, column: 17, scope: !122)
!122 = distinct !DILexicalBlock(scope: !114, file: !1, line: 50, column: 47)
!123 = !DILocation(line: 52, column: 9, scope: !122)
!124 = !DILocation(line: 53, column: 5, scope: !115)
!125 = !DILocation(line: 49, column: 32, scope: !111)
!126 = distinct !{!126, !96, !127}
!127 = !DILocation(line: 53, column: 5, scope: !97)
!128 = !DILocation(line: 0, scope: !122)
!129 = !DILocation(line: 56, column: 1, scope: !22)
!130 = distinct !DISubprogram(name: "main", scope: !1, file: !1, line: 59, type: !131, isLocal: false, isDefinition: true, scopeLine: 60, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !134)
!131 = !DISubroutineType(types: !132)
!132 = !{!4, !4, !133}
!133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !25, size: 64)
!134 = !{!135, !136, !137, !197, !201, !202}
!135 = !DILocalVariable(name: "argc", arg: 1, scope: !130, file: !1, line: 59, type: !4)
!136 = !DILocalVariable(name: "argv", arg: 2, scope: !130, file: !1, line: 59, type: !133)
!137 = !DILocalVariable(name: "fd", scope: !130, file: !1, line: 61, type: !138)
!138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !139, size: 64)
!139 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !140, line: 7, baseType: !141)
!140 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "/home/seshagiri/work/angora/tests/test_dataset")
!141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !142, line: 245, size: 1728, elements: !143)
!142 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/libio.h", directory: "/home/seshagiri/work/angora/tests/test_dataset")
!143 = !{!144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !164, !165, !166, !167, !171, !173, !175, !179, !182, !184, !186, !187, !188, !189, !192, !193}
!144 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !141, file: !142, line: 246, baseType: !4, size: 32)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !141, file: !142, line: 251, baseType: !25, size: 64, offset: 64)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !141, file: !142, line: 252, baseType: !25, size: 64, offset: 128)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !141, file: !142, line: 253, baseType: !25, size: 64, offset: 192)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !141, file: !142, line: 254, baseType: !25, size: 64, offset: 256)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !141, file: !142, line: 255, baseType: !25, size: 64, offset: 320)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !141, file: !142, line: 256, baseType: !25, size: 64, offset: 384)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !141, file: !142, line: 257, baseType: !25, size: 64, offset: 448)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !141, file: !142, line: 258, baseType: !25, size: 64, offset: 512)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !141, file: !142, line: 260, baseType: !25, size: 64, offset: 576)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !141, file: !142, line: 261, baseType: !25, size: 64, offset: 640)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !141, file: !142, line: 262, baseType: !25, size: 64, offset: 704)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !141, file: !142, line: 264, baseType: !157, size: 64, offset: 768)
!157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !158, size: 64)
!158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !142, line: 160, size: 192, elements: !159)
!159 = !{!160, !161, !163}
!160 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !158, file: !142, line: 161, baseType: !157, size: 64)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !158, file: !142, line: 162, baseType: !162, size: 64, offset: 64)
!162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !141, size: 64)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !158, file: !142, line: 166, baseType: !4, size: 32, offset: 128)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !141, file: !142, line: 266, baseType: !162, size: 64, offset: 832)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !141, file: !142, line: 268, baseType: !4, size: 32, offset: 896)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !141, file: !142, line: 272, baseType: !4, size: 32, offset: 928)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !141, file: !142, line: 274, baseType: !168, size: 64, offset: 960)
!168 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !169, line: 140, baseType: !170)
!169 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "/home/seshagiri/work/angora/tests/test_dataset")
!170 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !141, file: !142, line: 278, baseType: !172, size: 16, offset: 1024)
!172 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !141, file: !142, line: 279, baseType: !174, size: 8, offset: 1040)
!174 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !141, file: !142, line: 280, baseType: !176, size: 8, offset: 1048)
!176 = !DICompositeType(tag: DW_TAG_array_type, baseType: !26, size: 8, elements: !177)
!177 = !{!178}
!178 = !DISubrange(count: 1)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !141, file: !142, line: 284, baseType: !180, size: 64, offset: 1088)
!180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 64)
!181 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !142, line: 154, baseType: null)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !141, file: !142, line: 293, baseType: !183, size: 64, offset: 1152)
!183 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !169, line: 141, baseType: !170)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !141, file: !142, line: 301, baseType: !185, size: 64, offset: 1216)
!185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !141, file: !142, line: 302, baseType: !185, size: 64, offset: 1280)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !141, file: !142, line: 303, baseType: !185, size: 64, offset: 1344)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !141, file: !142, line: 304, baseType: !185, size: 64, offset: 1408)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !141, file: !142, line: 306, baseType: !190, size: 64, offset: 1472)
!190 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !191, line: 62, baseType: !36)
!191 = !DIFile(filename: "/home/seshagiri/installed_apps/clang+llvm/lib/clang/7.0.1/include/stddef.h", directory: "/home/seshagiri/work/angora/tests/test_dataset")
!192 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !141, file: !142, line: 307, baseType: !4, size: 32, offset: 1536)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !141, file: !142, line: 309, baseType: !194, size: 160, offset: 1568)
!194 = !DICompositeType(tag: DW_TAG_array_type, baseType: !26, size: 160, elements: !195)
!195 = !{!196}
!196 = !DISubrange(count: 20)
!197 = !DILocalVariable(name: "buf", scope: !130, file: !1, line: 62, type: !198)
!198 = !DICompositeType(tag: DW_TAG_array_type, baseType: !26, size: 1024, elements: !199)
!199 = !{!200}
!200 = !DISubrange(count: 128)
!201 = !DILocalVariable(name: "result", scope: !130, file: !1, line: 63, type: !4)
!202 = !DILocalVariable(name: "ret", scope: !130, file: !1, line: 75, type: !190)
!203 = !DILocation(line: 60, scope: !130)
!204 = !DILocation(line: 62, column: 10, scope: !130)
!205 = !DILocation(line: 59, column: 14, scope: !130)
!206 = !DILocation(line: 59, column: 27, scope: !130)
!207 = !DILocation(line: 62, column: 5, scope: !130)
!208 = !DILocation(line: 65, column: 14, scope: !209)
!209 = distinct !DILexicalBlock(scope: !130, file: !1, line: 65, column: 9)
!210 = !DILocation(line: 65, column: 9, scope: !130)
!211 = !DILocation(line: 66, column: 9, scope: !212)
!212 = distinct !DILexicalBlock(scope: !209, file: !1, line: 65, column: 19)
!213 = !DILocation(line: 69, column: 16, scope: !130)
!214 = !{!215, !215, i64 0}
!215 = !{!"any pointer", !51, i64 0}
!216 = !DILocation(line: 69, column: 10, scope: !130)
!217 = !DILocation(line: 61, column: 11, scope: !130)
!218 = !DILocation(line: 71, column: 10, scope: !219)
!219 = distinct !DILexicalBlock(scope: !130, file: !1, line: 71, column: 9)
!220 = !DILocation(line: 71, column: 9, scope: !130)
!221 = !DILocation(line: 72, column: 9, scope: !222)
!222 = distinct !DILexicalBlock(scope: !219, file: !1, line: 71, column: 14)
!223 = !DILocation(line: 73, column: 5, scope: !222)
!224 = !DILocation(line: 75, column: 5, scope: !130)
!225 = !DILocation(line: 75, column: 18, scope: !130)
!226 = !DILocation(line: 75, column: 12, scope: !130)
!227 = !DILocation(line: 76, column: 5, scope: !130)
!228 = !DILocation(line: 78, column: 13, scope: !229)
!229 = distinct !DILexicalBlock(scope: !130, file: !1, line: 78, column: 9)
!230 = !DILocation(line: 78, column: 9, scope: !130)
!231 = !DILocation(line: 79, column: 9, scope: !232)
!232 = distinct !DILexicalBlock(scope: !229, file: !1, line: 78, column: 20)
!233 = !DILocation(line: 80, column: 9, scope: !232)
!234 = !DILocation(line: 83, column: 31, scope: !130)
!235 = !DILocation(line: 83, column: 14, scope: !130)
!236 = !DILocation(line: 63, column: 9, scope: !130)
!237 = !DILocation(line: 85, column: 16, scope: !238)
!238 = distinct !DILexicalBlock(scope: !130, file: !1, line: 85, column: 9)
!239 = !DILocation(line: 85, column: 9, scope: !130)
!240 = !DILocation(line: 86, column: 9, scope: !241)
!241 = distinct !DILexicalBlock(scope: !238, file: !1, line: 85, column: 22)
!242 = !DILocation(line: 87, column: 16, scope: !243)
!243 = distinct !DILexicalBlock(scope: !238, file: !1, line: 87, column: 16)
!244 = !DILocation(line: 87, column: 23, scope: !243)
!245 = !DILocation(line: 87, column: 16, scope: !238)
!246 = !DILocation(line: 88, column: 9, scope: !247)
!247 = distinct !DILexicalBlock(scope: !243, file: !1, line: 87, column: 29)
!248 = !DILocation(line: 89, column: 5, scope: !247)
!249 = !DILocation(line: 90, column: 9, scope: !250)
!250 = distinct !DILexicalBlock(scope: !243, file: !1, line: 89, column: 12)
!251 = !DILocation(line: 94, column: 1, scope: !130)
