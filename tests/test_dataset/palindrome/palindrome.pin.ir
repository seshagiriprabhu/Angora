; ModuleID = 'palindrome/palindrome.c'
source_filename = "palindrome/palindrome.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }

@.str = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.2 = private unnamed_addr constant [24 x i8] c"\09\09Unable to open file\0A\0A\00", align 1
@.str.3 = private unnamed_addr constant [24 x i8] c"\09\09Unable to read file\0A\0A\00", align 1
@.str.4 = private unnamed_addr constant [34 x i8] c"\09\09Nope, that's not a palindrome\0A\0A\00", align 1
@.str.5 = private unnamed_addr constant [30 x i8] c"\09\09Yes, that's a palindrome!\0A\0A\00", align 1
@__angora_context = common thread_local global i32 0
@__angora_call_site = common thread_local global i32 0

; Function Attrs: nounwind uwtable
define i32 @check_palindrome(i8* nocapture readonly) local_unnamed_addr #0 !dbg !10 {
  %2 = load i32, i32* @__angora_call_site, !dbg !29, !nosanitize !2
  %3 = load i32, i32* @__angora_context, !dbg !29, !nosanitize !2
  %4 = xor i32 %3, %2, !dbg !29, !nosanitize !2
  store i32 %4, i32* @__angora_context, !dbg !29, !nosanitize !2
  call void @llvm.dbg.value(metadata i8* %0, metadata !16, metadata !DIExpression()), !dbg !29
  call void @llvm.dbg.value(metadata i32 -1, metadata !17, metadata !DIExpression()), !dbg !30
  call void @llvm.dbg.value(metadata i32 1, metadata !20, metadata !DIExpression()), !dbg !31
  store i32 1028491, i32* @__angora_call_site, !dbg !32, !nosanitize !2
  %5 = tail call i64 @strlen(i8* %0) #8, !dbg !32
  %6 = trunc i64 %5 to i32, !dbg !33
  call void @llvm.dbg.value(metadata i32 %6, metadata !21, metadata !DIExpression()), !dbg !34
  %7 = load i32, i32* @__angora_context, !dbg !35, !nosanitize !2
  call void @__angora_trace_exploit_val_tt(i32 852915387, i32 %7, i32 8, i32 16414, i8* %0), !dbg !35, !nosanitize !2
  %8 = load i8, i8* %0, align 1, !dbg !35, !tbaa !37
  %9 = icmp eq i8 %8, 120, !dbg !40
  %10 = zext i1 %9 to i32, !dbg !41, !nosanitize !2
  %11 = zext i8 %8 to i64, !dbg !41
  %12 = load i32, i32* @__angora_context, !dbg !41, !nosanitize !2
  call void @__angora_trace_cmp_tt(i32 852923010, i32 %12, i32 1, i32 32, i64 %11, i64 120, i32 %10), !dbg !41, !nosanitize !2
  br i1 %9, label %13, label %14, !dbg !41

; <label>:13:                                     ; preds = %1
  call void @llvm.dbg.value(metadata i32 64, metadata !22, metadata !DIExpression()), !dbg !42
  br label %15, !dbg !43

; <label>:14:                                     ; preds = %1
  call void @llvm.dbg.value(metadata i32 128, metadata !22, metadata !DIExpression()), !dbg !42
  br label %15

; <label>:15:                                     ; preds = %14, %13
  %16 = phi i64 [ 64, %13 ], [ 128, %14 ]
  %17 = load i32, i32* @__angora_context, !dbg !45, !nosanitize !2
  call void @__angora_trace_exploit_val_tt(i32 852911229, i32 %17, i32 8, i32 16413, i64 %16), !dbg !45, !nosanitize !2
  %18 = alloca i8, i64 %16, align 16, !dbg !45
  call void @llvm.dbg.value(metadata i64 %16, metadata !23, metadata !DIExpression()), !dbg !46
  call void @llvm.dbg.declare(metadata i8* %18, metadata !25, metadata !DIExpression()), !dbg !47
  call void @llvm.dbg.value(metadata i32 0, metadata !18, metadata !DIExpression()), !dbg !48
  %19 = icmp sgt i32 %6, 0, !dbg !49
  %20 = zext i1 %19 to i32, !dbg !52, !nosanitize !2
  %21 = zext i32 %6 to i64, !dbg !52
  %22 = load i32, i32* @__angora_context, !dbg !52, !nosanitize !2
  call void @__angora_trace_cmp_tt(i32 852926541, i32 %22, i32 4, i32 38, i64 %21, i64 0, i32 %20), !dbg !52, !nosanitize !2
  br i1 %19, label %24, label %23, !dbg !52

; <label>:23:                                     ; preds = %15
  call void @llvm.dbg.value(metadata i32 0, metadata !18, metadata !DIExpression()), !dbg !48
  br label %51, !dbg !53

; <label>:24:                                     ; preds = %15
  %25 = and i64 %5, 4294967295
  br label %26, !dbg !55

; <label>:26:                                     ; preds = %26, %24
  %27 = phi i64 [ 0, %24 ], [ %31, %26 ]
  call void @llvm.dbg.value(metadata i64 %27, metadata !18, metadata !DIExpression()), !dbg !48
  %28 = load i32, i32* @__angora_context, !dbg !57, !nosanitize !2
  call void @__angora_trace_exploit_val_tt(i32 852915684, i32 %28, i32 8, i32 16416, i64 %27), !dbg !57, !nosanitize !2
  %29 = getelementptr inbounds i8, i8* %18, i64 %27, !dbg !57
  %30 = load i32, i32* @__angora_context, !dbg !58, !nosanitize !2
  call void @__angora_trace_exploit_val_tt(i32 852926574, i32 %30, i32 8, i32 16415, i8* %29), !dbg !58, !nosanitize !2
  store i8 0, i8* %29, align 1, !dbg !58, !tbaa !37
  %31 = add nuw nsw i64 %27, 1, !dbg !59
  call void @llvm.dbg.value(metadata i32 undef, metadata !18, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !48
  %32 = icmp eq i64 %31, %25, !dbg !49
  %33 = zext i1 %32 to i32, !dbg !52, !nosanitize !2
  %34 = load i32, i32* @__angora_context, !dbg !52, !nosanitize !2
  call void @__angora_trace_cmp_tt(i32 -1736187672, i32 %34, i32 8, i32 32, i64 %31, i64 %25, i32 %33), !dbg !52, !nosanitize !2
  br i1 %32, label %35, label %26, !dbg !52, !llvm.loop !60

; <label>:35:                                     ; preds = %26
  call void @llvm.dbg.value(metadata i32 0, metadata !18, metadata !DIExpression()), !dbg !48
  br i1 %19, label %36, label %51, !dbg !53

; <label>:36:                                     ; preds = %35
  %37 = and i64 %5, 4294967295
  br label %38, !dbg !62

; <label>:38:                                     ; preds = %38, %36
  %39 = phi i64 [ 0, %36 ], [ %47, %38 ]
  call void @llvm.dbg.value(metadata i64 %39, metadata !18, metadata !DIExpression()), !dbg !48
  %40 = load i32, i32* @__angora_context, !dbg !62, !nosanitize !2
  call void @__angora_trace_exploit_val_tt(i32 852928884, i32 %40, i32 8, i32 16416, i64 %39), !dbg !62, !nosanitize !2
  %41 = getelementptr inbounds i8, i8* %0, i64 %39, !dbg !62
  %42 = load i32, i32* @__angora_context, !dbg !62, !nosanitize !2
  call void @__angora_trace_exploit_val_tt(i32 -1736180643, i32 %42, i32 8, i32 16414, i8* %41), !dbg !62, !nosanitize !2
  %43 = load i8, i8* %41, align 1, !dbg !62, !tbaa !37
  %44 = load i32, i32* @__angora_context, !dbg !65, !nosanitize !2
  call void @__angora_trace_exploit_val_tt(i32 852915816, i32 %44, i32 8, i32 16416, i64 %39), !dbg !65, !nosanitize !2
  %45 = getelementptr inbounds i8, i8* %18, i64 %39, !dbg !65
  %46 = load i32, i32* @__angora_context, !dbg !66, !nosanitize !2
  call void @__angora_trace_exploit_val_tt(i32 852926706, i32 %46, i32 8, i32 16415, i8* %45), !dbg !66, !nosanitize !2
  store i8 %43, i8* %45, align 1, !dbg !66, !tbaa !37
  %47 = add nuw nsw i64 %39, 1, !dbg !67
  call void @llvm.dbg.value(metadata i32 undef, metadata !18, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !48
  %48 = icmp eq i64 %47, %37, !dbg !68
  %49 = zext i1 %48 to i32, !dbg !53, !nosanitize !2
  %50 = load i32, i32* @__angora_context, !dbg !53, !nosanitize !2
  call void @__angora_trace_cmp_tt(i32 852926673, i32 %50, i32 8, i32 32, i64 %47, i64 %37, i32 %49), !dbg !53, !nosanitize !2
  br i1 %48, label %51, label %38, !dbg !53, !llvm.loop !69

; <label>:51:                                     ; preds = %38, %23, %35
  call void @llvm.dbg.value(metadata i32 0, metadata !18, metadata !DIExpression()), !dbg !48
  call void @llvm.dbg.value(metadata i32 -1, metadata !17, metadata !DIExpression()), !dbg !30
  %52 = load i32, i32* @__angora_context, !dbg !71, !nosanitize !2
  call void @__angora_trace_exploit_val_tt(i32 852924627, i32 %52, i32 8, i32 16414, i8* %18), !dbg !71, !nosanitize !2
  %53 = load i8, i8* %18, align 16, !dbg !71, !tbaa !37
  %54 = icmp eq i8 %53, 0, !dbg !74
  %55 = zext i1 %54 to i32, !dbg !75, !nosanitize !2
  %56 = zext i8 %53 to i64, !dbg !75
  %57 = load i32, i32* @__angora_context, !dbg !75, !nosanitize !2
  call void @__angora_trace_cmp_tt(i32 852935517, i32 %57, i32 1, i32 32, i64 %56, i64 0, i32 %55), !dbg !75, !nosanitize !2
  br i1 %54, label %58, label %59, !dbg !75

; <label>:58:                                     ; preds = %51
  call void @llvm.dbg.value(metadata i32 %62, metadata !17, metadata !DIExpression()), !dbg !30
  call void @llvm.dbg.value(metadata i32 %62, metadata !19, metadata !DIExpression()), !dbg !76
  call void @llvm.dbg.value(metadata i32 %80, metadata !19, metadata !DIExpression()), !dbg !76
  call void @llvm.dbg.value(metadata i32 0, metadata !18, metadata !DIExpression()), !dbg !48
  call void @llvm.dbg.value(metadata i32 1, metadata !20, metadata !DIExpression()), !dbg !31
  br label %85, !dbg !77

; <label>:59:                                     ; preds = %51, %59
  %60 = phi i64 [ %63, %59 ], [ 0, %51 ]
  %61 = phi i32 [ %62, %59 ], [ -1, %51 ]
  call void @llvm.dbg.value(metadata i32 %61, metadata !17, metadata !DIExpression()), !dbg !30
  call void @llvm.dbg.value(metadata i64 %60, metadata !18, metadata !DIExpression()), !dbg !48
  %62 = add nsw i32 %61, 1, !dbg !79
  %63 = add nuw i64 %60, 1, !dbg !81
  call void @llvm.dbg.value(metadata i32 %62, metadata !17, metadata !DIExpression()), !dbg !30
  call void @llvm.dbg.value(metadata i32 undef, metadata !18, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !48
  %64 = load i32, i32* @__angora_context, !dbg !71, !nosanitize !2
  call void @__angora_trace_exploit_val_tt(i32 -1736193414, i32 %64, i32 8, i32 16416, i64 %63), !dbg !71, !nosanitize !2
  %65 = getelementptr inbounds i8, i8* %18, i64 %63, !dbg !71
  %66 = load i32, i32* @__angora_context, !dbg !71, !nosanitize !2
  call void @__angora_trace_exploit_val_tt(i32 -913612945, i32 %66, i32 8, i32 16414, i8* %65), !dbg !71, !nosanitize !2
  %67 = load i8, i8* %65, align 1, !dbg !71, !tbaa !37
  %68 = icmp eq i8 %67, 0, !dbg !74
  %69 = zext i1 %68 to i32, !dbg !75, !nosanitize !2
  %70 = zext i8 %67 to i64, !dbg !75
  %71 = load i32, i32* @__angora_context, !dbg !75, !nosanitize !2
  call void @__angora_trace_cmp_tt(i32 -1736160744, i32 %71, i32 1, i32 32, i64 %70, i64 0, i32 %69), !dbg !75, !nosanitize !2
  br i1 %68, label %72, label %59, !dbg !75, !llvm.loop !82

; <label>:72:                                     ; preds = %59
  call void @llvm.dbg.value(metadata i32 %61, metadata !17, metadata !DIExpression()), !dbg !30
  call void @llvm.dbg.value(metadata i32 %61, metadata !17, metadata !DIExpression()), !dbg !30
  call void @llvm.dbg.value(metadata i32 %61, metadata !17, metadata !DIExpression()), !dbg !30
  call void @llvm.dbg.value(metadata i32 %62, metadata !17, metadata !DIExpression()), !dbg !30
  call void @llvm.dbg.value(metadata i32 %62, metadata !19, metadata !DIExpression()), !dbg !76
  %73 = srem i32 %62, 2, !dbg !84
  %74 = icmp eq i32 %73, 1, !dbg !86
  %75 = zext i1 %74 to i32, !dbg !87, !nosanitize !2
  %76 = zext i32 %73 to i64, !dbg !87
  %77 = load i32, i32* @__angora_context, !dbg !87, !nosanitize !2
  call void @__angora_trace_cmp_tt(i32 852924792, i32 %77, i32 4, i32 32, i64 %76, i64 1, i32 %75), !dbg !87, !nosanitize !2
  br i1 %74, label %78, label %79, !dbg !87

; <label>:78:                                     ; preds = %72
  call void @llvm.dbg.value(metadata i32 %61, metadata !19, metadata !DIExpression()), !dbg !76
  br label %79, !dbg !88

; <label>:79:                                     ; preds = %78, %72
  %80 = phi i32 [ %61, %78 ], [ %62, %72 ], !dbg !46
  call void @llvm.dbg.value(metadata i32 %80, metadata !19, metadata !DIExpression()), !dbg !76
  call void @llvm.dbg.value(metadata i32 0, metadata !18, metadata !DIExpression()), !dbg !48
  call void @llvm.dbg.value(metadata i32 1, metadata !20, metadata !DIExpression()), !dbg !31
  %81 = icmp slt i32 %80, -1, !dbg !90
  %82 = zext i1 %81 to i32, !dbg !77, !nosanitize !2
  %83 = zext i32 %80 to i64, !dbg !77
  %84 = load i32, i32* @__angora_context, !dbg !77, !nosanitize !2
  call void @__angora_trace_cmp_tt(i32 852927102, i32 %84, i32 4, i32 296, i64 %83, i64 4294967295, i32 %82), !dbg !77, !nosanitize !2
  br i1 %81, label %117, label %85, !dbg !77

; <label>:85:                                     ; preds = %58, %79
  %86 = phi i32 [ -1, %58 ], [ %80, %79 ]
  %87 = phi i32 [ -1, %58 ], [ %62, %79 ]
  %88 = sdiv i32 %86, 2, !dbg !92
  %89 = sext i32 %87 to i64, !dbg !93
  %90 = add nsw i32 %88, 1, !dbg !93
  %91 = zext i32 %90 to i64
  br label %92, !dbg !93

; <label>:92:                                     ; preds = %111, %85
  %93 = phi i64 [ 0, %85 ], [ %113, %111 ]
  %94 = phi i32 [ 1, %85 ], [ %112, %111 ]
  call void @llvm.dbg.value(metadata i64 %93, metadata !18, metadata !DIExpression()), !dbg !48
  call void @llvm.dbg.value(metadata i32 %94, metadata !20, metadata !DIExpression()), !dbg !31
  %95 = load i32, i32* @__angora_context, !dbg !96, !nosanitize !2
  call void @__angora_trace_exploit_val_tt(i32 852920601, i32 %95, i32 8, i32 16416, i64 %93), !dbg !96, !nosanitize !2
  %96 = getelementptr inbounds i8, i8* %18, i64 %93, !dbg !96
  %97 = load i32, i32* @__angora_context, !dbg !96, !nosanitize !2
  call void @__angora_trace_exploit_val_tt(i32 -1736205492, i32 %97, i32 8, i32 16414, i8* %96), !dbg !96, !nosanitize !2
  %98 = load i8, i8* %96, align 1, !dbg !96, !tbaa !37
  %99 = xor i64 %93, -1, !dbg !97
  %100 = add nsw i64 %89, %99, !dbg !97
  %101 = load i32, i32* @__angora_context, !dbg !98, !nosanitize !2
  call void @__angora_trace_exploit_val_tt(i32 852934758, i32 %101, i32 8, i32 16416, i64 %100), !dbg !98, !nosanitize !2
  %102 = getelementptr inbounds i8, i8* %18, i64 %100, !dbg !98
  %103 = load i32, i32* @__angora_context, !dbg !98, !nosanitize !2
  call void @__angora_trace_exploit_val_tt(i32 -1736163021, i32 %103, i32 8, i32 16414, i8* %102), !dbg !98, !nosanitize !2
  %104 = load i8, i8* %102, align 1, !dbg !98, !tbaa !37
  %105 = icmp eq i8 %98, %104, !dbg !99
  %106 = zext i1 %105 to i32, !dbg !100, !nosanitize !2
  %107 = zext i8 %98 to i64, !dbg !100
  %108 = zext i8 %104 to i64, !dbg !100
  %109 = load i32, i32* @__angora_context, !dbg !100, !nosanitize !2
  call void @__angora_trace_cmp_tt(i32 852931491, i32 %109, i32 1, i32 32, i64 %107, i64 %108, i32 %106), !dbg !100, !nosanitize !2
  br i1 %105, label %111, label %110, !dbg !100

; <label>:110:                                    ; preds = %92
  call void @llvm.dbg.value(metadata i32 0, metadata !20, metadata !DIExpression()), !dbg !31
  br label %111, !dbg !101

; <label>:111:                                    ; preds = %92, %110
  %112 = phi i32 [ 0, %110 ], [ %94, %92 ], !dbg !46
  %113 = add nuw nsw i64 %93, 1, !dbg !103
  call void @llvm.dbg.value(metadata i32 undef, metadata !18, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !48
  call void @llvm.dbg.value(metadata i32 %112, metadata !20, metadata !DIExpression()), !dbg !31
  %114 = icmp eq i64 %113, %91, !dbg !90
  %115 = zext i1 %114 to i32, !dbg !77, !nosanitize !2
  %116 = load i32, i32* @__angora_context, !dbg !77, !nosanitize !2
  call void @__angora_trace_cmp_tt(i32 -1736185989, i32 %116, i32 8, i32 32, i64 %113, i64 %91, i32 %115), !dbg !77, !nosanitize !2
  br i1 %114, label %117, label %92, !dbg !77, !llvm.loop !104

; <label>:117:                                    ; preds = %111, %79
  %118 = phi i32 [ 1, %79 ], [ %112, %111 ], !dbg !106
  call void @llvm.dbg.value(metadata i32 %118, metadata !20, metadata !DIExpression()), !dbg !31
  store i32 %3, i32* @__angora_context, !dbg !107, !nosanitize !2
  ret i32 %118, !dbg !107
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64, i8* nocapture) #2

; Function Attrs: argmemonly nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64, i8* nocapture) #2

; Function Attrs: nounwind uwtable
define i32 @main(i32, i8** nocapture readonly) local_unnamed_addr #0 !dbg !108 {
  %3 = load i32, i32* @__angora_call_site, !nosanitize !2
  %4 = load i32, i32* @__angora_context, !nosanitize !2
  %5 = xor i32 %4, %3, !nosanitize !2
  store i32 %5, i32* @__angora_context, !nosanitize !2
  %6 = alloca [128 x i8], align 16
  call void @llvm.dbg.value(metadata i32 %0, metadata !113, metadata !DIExpression()), !dbg !181
  call void @llvm.dbg.value(metadata i8** %1, metadata !114, metadata !DIExpression()), !dbg !182
  %7 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i64 0, i64 0, !dbg !183
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %7) #6, !dbg !183
  call void @llvm.dbg.declare(metadata [128 x i8]* %6, metadata !175, metadata !DIExpression()), !dbg !184
  %8 = icmp slt i32 %0, 2, !dbg !185
  %9 = zext i1 %8 to i32, !dbg !187, !nosanitize !2
  %10 = zext i32 %0 to i64, !dbg !187
  %11 = load i32, i32* @__angora_context, !dbg !187, !nosanitize !2
  call void @__angora_trace_cmp_tt(i32 852922185, i32 %11, i32 4, i32 40, i64 %10, i64 2, i32 %9), !dbg !187, !nosanitize !2
  br i1 %8, label %12, label %13, !dbg !187

; <label>:12:                                     ; preds = %2
  br label %48, !dbg !188

; <label>:13:                                     ; preds = %2
  %14 = getelementptr inbounds i8*, i8** %1, i64 1, !dbg !190
  %15 = load i32, i32* @__angora_context, !dbg !190, !nosanitize !2
  call void @__angora_trace_exploit_val_tt(i32 852924495, i32 %15, i32 8, i32 16414, i8** %14), !dbg !190, !nosanitize !2
  %16 = load i8*, i8** %14, align 8, !dbg !190, !tbaa !191
  store i32 598632, i32* @__angora_call_site, !dbg !193, !nosanitize !2
  %17 = tail call %struct._IO_FILE* @fopen(i8* %16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0)), !dbg !193
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %17, metadata !115, metadata !DIExpression()), !dbg !194
  %18 = icmp eq %struct._IO_FILE* %17, null, !dbg !195
  %19 = zext i1 %18 to i32, !dbg !197, !nosanitize !2
  %20 = ptrtoint %struct._IO_FILE* %17 to i64, !dbg !197
  %21 = load i32, i32* @__angora_context, !dbg !197, !nosanitize !2
  call void @__angora_trace_cmp_tt(i32 852918027, i32 %21, i32 8, i32 32, i64 %20, i64 0, i32 %19), !dbg !197, !nosanitize !2
  br i1 %18, label %22, label %24, !dbg !197

; <label>:22:                                     ; preds = %13
  store i32 1017473, i32* @__angora_call_site, !dbg !198, !nosanitize !2
  %23 = tail call i32 @puts(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0)), !dbg !198
  br label %24, !dbg !200

; <label>:24:                                     ; preds = %13, %22
  store i32 901926, i32* @__angora_call_site, !dbg !201, !nosanitize !2
  %25 = call i64 @fread_unlocked(i8* nonnull %7, i64 1, i64 128, %struct._IO_FILE* %17), !dbg !201
  call void @llvm.dbg.value(metadata i64 %25, metadata !180, metadata !DIExpression()), !dbg !202
  store i32 383847, i32* @__angora_call_site, !dbg !203, !nosanitize !2
  %26 = tail call i32 @fclose(%struct._IO_FILE* %17), !dbg !203
  %27 = icmp ult i64 %25, 128, !dbg !204
  %28 = zext i1 %27 to i32, !dbg !206, !nosanitize !2
  %29 = load i32, i32* @__angora_context, !dbg !206, !nosanitize !2
  call void @__angora_trace_cmp_tt(i32 852921525, i32 %29, i32 8, i32 36, i64 %25, i64 128, i32 %28), !dbg !206, !nosanitize !2
  br i1 %27, label %30, label %32, !dbg !206

; <label>:30:                                     ; preds = %24
  store i32 130324, i32* @__angora_call_site, !dbg !207, !nosanitize !2
  %31 = tail call i32 @puts(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0)), !dbg !207
  br label %48, !dbg !209

; <label>:32:                                     ; preds = %24
  store i32 854461, i32* @__angora_call_site, !dbg !210, !nosanitize !2
  %33 = call i32 @check_palindrome(i8* nonnull %7), !dbg !210
  call void @llvm.dbg.value(metadata i32 %33, metadata !179, metadata !DIExpression()), !dbg !211
  %34 = icmp eq i32 %33, 1, !dbg !212
  %35 = zext i1 %34 to i32, !dbg !214, !nosanitize !2
  %36 = zext i32 %33 to i64, !dbg !214
  %37 = load i32, i32* @__angora_context, !dbg !214, !nosanitize !2
  call void @__angora_trace_cmp_tt(i32 852925023, i32 %37, i32 4, i32 32, i64 %36, i64 1, i32 %35), !dbg !214, !nosanitize !2
  br i1 %34, label %38, label %39, !dbg !214

; <label>:38:                                     ; preds = %32
  store i32 191410, i32* @__angora_call_site, !dbg !215, !nosanitize !2
  tail call void @exit(i32 1) #9, !dbg !215
  unreachable, !dbg !215

; <label>:39:                                     ; preds = %32
  %40 = icmp eq i32 %33, 0, !dbg !217
  %41 = zext i1 %40 to i32, !dbg !219, !nosanitize !2
  %42 = zext i32 %33 to i64, !dbg !219
  %43 = load i32, i32* @__angora_context, !dbg !219, !nosanitize !2
  call void @__angora_trace_cmp_tt(i32 852932712, i32 %43, i32 4, i32 32, i64 %42, i64 0, i32 %41), !dbg !219, !nosanitize !2
  br i1 %40, label %44, label %46, !dbg !219

; <label>:44:                                     ; preds = %39
  store i32 706307, i32* @__angora_call_site, !dbg !220, !nosanitize !2
  %45 = tail call i32 @puts(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4, i64 0, i64 0)), !dbg !220
  br label %48, !dbg !222

; <label>:46:                                     ; preds = %39
  store i32 775808, i32* @__angora_call_site, !dbg !223, !nosanitize !2
  %47 = tail call i32 @puts(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.5, i64 0, i64 0)), !dbg !223
  br label %48

; <label>:48:                                     ; preds = %30, %44, %46, %12
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %7) #6, !dbg !225
  store i32 %4, i32* @__angora_context, !dbg !225, !nosanitize !2
  ret i32 0, !dbg !225
}

; Function Attrs: nounwind
declare noalias %struct._IO_FILE* @fopen(i8* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #4

; Function Attrs: nounwind
declare i32 @fclose(%struct._IO_FILE* nocapture) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @exit(i32) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @__unfold_branch_fn(i32) local_unnamed_addr #6

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #6

; Function Attrs: nounwind
declare i64 @fread_unlocked(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) local_unnamed_addr #6

; Function Attrs: nounwind readnone
declare void @__angora_trace_cmp_tt(i32, i32, i32, i32, i64, i64, i32) #7

; Function Attrs: nounwind readnone
declare void @__angora_trace_switch_tt(i32, i32, i32, i64, i32, i64*) #7

; Function Attrs: nounwind readonly
declare void @__angora_trace_fn_tt(i32, i32, i32, i8*, i8*) #8

; Function Attrs: nounwind readnone
declare void @__angora_trace_exploit_val_tt(i32, i32, i32, i32, i64) #7

attributes #0 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { argmemonly nounwind }
attributes #3 = { argmemonly nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { nounwind readnone }
attributes #8 = { nounwind readonly }
attributes #9 = { noreturn nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!5, !6, !7, !8}
!llvm.ident = !{!9}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 7.0.1 (tags/RELEASE_701/final)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !3)
!1 = !DIFile(filename: "palindrome/palindrome.c", directory: "/home/seshagiri/work/angora/tests/test_dataset")
!2 = !{}
!3 = !{!4}
!4 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!5 = !{i32 2, !"Dwarf Version", i32 4}
!6 = !{i32 2, !"Debug Info Version", i32 3}
!7 = !{i32 1, !"wchar_size", i32 4}
!8 = !{i32 7, !"PIC Level", i32 1}
!9 = !{!"clang version 7.0.1 (tags/RELEASE_701/final)"}
!10 = distinct !DISubprogram(name: "check_palindrome", scope: !1, file: !1, line: 16, type: !11, isLocal: false, isDefinition: true, scopeLine: 16, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !15)
!11 = !DISubroutineType(types: !12)
!12 = !{!4, !13}
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 64)
!14 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!15 = !{!16, !17, !18, !19, !20, !21, !22, !23, !25}
!16 = !DILocalVariable(name: "buf", arg: 1, scope: !10, file: !1, line: 16, type: !13)
!17 = !DILocalVariable(name: "len", scope: !10, file: !1, line: 17, type: !4)
!18 = !DILocalVariable(name: "i", scope: !10, file: !1, line: 18, type: !4)
!19 = !DILocalVariable(name: "steps", scope: !10, file: !1, line: 19, type: !4)
!20 = !DILocalVariable(name: "pal", scope: !10, file: !1, line: 20, type: !4)
!21 = !DILocalVariable(name: "n", scope: !10, file: !1, line: 21, type: !4)
!22 = !DILocalVariable(name: "array_len", scope: !10, file: !1, line: 22, type: !4)
!23 = !DILocalVariable(scope: !10, type: !24, flags: DIFlagArtificial)
!24 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!25 = !DILocalVariable(name: "string", scope: !10, file: !1, line: 30, type: !26)
!26 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, elements: !27)
!27 = !{!28}
!28 = !DISubrange(count: !23)
!29 = !DILocation(line: 16, column: 28, scope: !10)
!30 = !DILocation(line: 17, column: 9, scope: !10)
!31 = !DILocation(line: 20, column: 9, scope: !10)
!32 = !DILocation(line: 21, column: 19, scope: !10)
!33 = !DILocation(line: 21, column: 13, scope: !10)
!34 = !DILocation(line: 21, column: 9, scope: !10)
!35 = !DILocation(line: 24, column: 9, scope: !36)
!36 = distinct !DILexicalBlock(scope: !10, file: !1, line: 24, column: 9)
!37 = !{!38, !38, i64 0}
!38 = !{!"omnipotent char", !39, i64 0}
!39 = !{!"Simple C/C++ TBAA"}
!40 = !DILocation(line: 24, column: 16, scope: !36)
!41 = !DILocation(line: 24, column: 9, scope: !10)
!42 = !DILocation(line: 22, column: 9, scope: !10)
!43 = !DILocation(line: 26, column: 5, scope: !44)
!44 = distinct !DILexicalBlock(scope: !36, file: !1, line: 24, column: 24)
!45 = !DILocation(line: 30, column: 5, scope: !10)
!46 = !DILocation(line: 0, scope: !10)
!47 = !DILocation(line: 30, column: 10, scope: !10)
!48 = !DILocation(line: 18, column: 9, scope: !10)
!49 = !DILocation(line: 32, column: 19, scope: !50)
!50 = distinct !DILexicalBlock(scope: !51, file: !1, line: 32, column: 5)
!51 = distinct !DILexicalBlock(scope: !10, file: !1, line: 32, column: 5)
!52 = !DILocation(line: 32, column: 5, scope: !51)
!53 = !DILocation(line: 36, column: 5, scope: !54)
!54 = distinct !DILexicalBlock(scope: !10, file: !1, line: 36, column: 5)
!55 = !DILocation(line: 33, column: 16, scope: !56)
!56 = distinct !DILexicalBlock(scope: !50, file: !1, line: 32, column: 29)
!57 = !DILocation(line: 33, column: 9, scope: !56)
!58 = !DILocation(line: 33, column: 19, scope: !56)
!59 = !DILocation(line: 32, column: 25, scope: !50)
!60 = distinct !{!60, !52, !61}
!61 = !DILocation(line: 34, column: 5, scope: !51)
!62 = !DILocation(line: 37, column: 21, scope: !63)
!63 = distinct !DILexicalBlock(scope: !64, file: !1, line: 36, column: 29)
!64 = distinct !DILexicalBlock(scope: !54, file: !1, line: 36, column: 5)
!65 = !DILocation(line: 37, column: 9, scope: !63)
!66 = !DILocation(line: 37, column: 19, scope: !63)
!67 = !DILocation(line: 36, column: 25, scope: !64)
!68 = !DILocation(line: 36, column: 19, scope: !64)
!69 = distinct !{!69, !53, !70}
!70 = !DILocation(line: 38, column: 5, scope: !54)
!71 = !DILocation(line: 40, column: 17, scope: !72)
!72 = distinct !DILexicalBlock(scope: !73, file: !1, line: 40, column: 5)
!73 = distinct !DILexicalBlock(scope: !10, file: !1, line: 40, column: 5)
!74 = !DILocation(line: 40, column: 27, scope: !72)
!75 = !DILocation(line: 40, column: 5, scope: !73)
!76 = !DILocation(line: 19, column: 9, scope: !10)
!77 = !DILocation(line: 49, column: 5, scope: !78)
!78 = distinct !DILexicalBlock(scope: !10, file: !1, line: 49, column: 5)
!79 = !DILocation(line: 41, column: 12, scope: !80)
!80 = distinct !DILexicalBlock(scope: !72, file: !1, line: 40, column: 41)
!81 = !DILocation(line: 40, column: 37, scope: !72)
!82 = distinct !{!82, !75, !83}
!83 = !DILocation(line: 42, column: 5, scope: !73)
!84 = !DILocation(line: 45, column: 13, scope: !85)
!85 = distinct !DILexicalBlock(scope: !10, file: !1, line: 45, column: 9)
!86 = !DILocation(line: 45, column: 17, scope: !85)
!87 = !DILocation(line: 45, column: 9, scope: !10)
!88 = !DILocation(line: 47, column: 5, scope: !89)
!89 = distinct !DILexicalBlock(scope: !85, file: !1, line: 45, column: 23)
!90 = !DILocation(line: 49, column: 19, scope: !91)
!91 = distinct !DILexicalBlock(scope: !78, file: !1, line: 49, column: 5)
!92 = !DILocation(line: 49, column: 27, scope: !91)
!93 = !DILocation(line: 50, column: 20, scope: !94)
!94 = distinct !DILexicalBlock(scope: !95, file: !1, line: 50, column: 13)
!95 = distinct !DILexicalBlock(scope: !91, file: !1, line: 49, column: 36)
!96 = !DILocation(line: 50, column: 13, scope: !94)
!97 = !DILocation(line: 50, column: 41, scope: !94)
!98 = !DILocation(line: 50, column: 26, scope: !94)
!99 = !DILocation(line: 50, column: 23, scope: !94)
!100 = !DILocation(line: 50, column: 13, scope: !95)
!101 = !DILocation(line: 52, column: 9, scope: !102)
!102 = distinct !DILexicalBlock(scope: !94, file: !1, line: 50, column: 47)
!103 = !DILocation(line: 49, column: 32, scope: !91)
!104 = distinct !{!104, !77, !105}
!105 = !DILocation(line: 53, column: 5, scope: !78)
!106 = !DILocation(line: 0, scope: !102)
!107 = !DILocation(line: 56, column: 1, scope: !10)
!108 = distinct !DISubprogram(name: "main", scope: !1, file: !1, line: 59, type: !109, isLocal: false, isDefinition: true, scopeLine: 60, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !112)
!109 = !DISubroutineType(types: !110)
!110 = !{!4, !4, !111}
!111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64)
!112 = !{!113, !114, !115, !175, !179, !180}
!113 = !DILocalVariable(name: "argc", arg: 1, scope: !108, file: !1, line: 59, type: !4)
!114 = !DILocalVariable(name: "argv", arg: 2, scope: !108, file: !1, line: 59, type: !111)
!115 = !DILocalVariable(name: "fd", scope: !108, file: !1, line: 61, type: !116)
!116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 64)
!117 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !118, line: 7, baseType: !119)
!118 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "/home/seshagiri/work/angora/tests/test_dataset")
!119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !120, line: 245, size: 1728, elements: !121)
!120 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/libio.h", directory: "/home/seshagiri/work/angora/tests/test_dataset")
!121 = !{!122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !142, !143, !144, !145, !149, !151, !153, !157, !160, !162, !164, !165, !166, !167, !170, !171}
!122 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !119, file: !120, line: 246, baseType: !4, size: 32)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !119, file: !120, line: 251, baseType: !13, size: 64, offset: 64)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !119, file: !120, line: 252, baseType: !13, size: 64, offset: 128)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !119, file: !120, line: 253, baseType: !13, size: 64, offset: 192)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !119, file: !120, line: 254, baseType: !13, size: 64, offset: 256)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !119, file: !120, line: 255, baseType: !13, size: 64, offset: 320)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !119, file: !120, line: 256, baseType: !13, size: 64, offset: 384)
!129 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !119, file: !120, line: 257, baseType: !13, size: 64, offset: 448)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !119, file: !120, line: 258, baseType: !13, size: 64, offset: 512)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !119, file: !120, line: 260, baseType: !13, size: 64, offset: 576)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !119, file: !120, line: 261, baseType: !13, size: 64, offset: 640)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !119, file: !120, line: 262, baseType: !13, size: 64, offset: 704)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !119, file: !120, line: 264, baseType: !135, size: 64, offset: 768)
!135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 64)
!136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !120, line: 160, size: 192, elements: !137)
!137 = !{!138, !139, !141}
!138 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !136, file: !120, line: 161, baseType: !135, size: 64)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !136, file: !120, line: 162, baseType: !140, size: 64, offset: 64)
!140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !119, size: 64)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !136, file: !120, line: 166, baseType: !4, size: 32, offset: 128)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !119, file: !120, line: 266, baseType: !140, size: 64, offset: 832)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !119, file: !120, line: 268, baseType: !4, size: 32, offset: 896)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !119, file: !120, line: 272, baseType: !4, size: 32, offset: 928)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !119, file: !120, line: 274, baseType: !146, size: 64, offset: 960)
!146 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !147, line: 140, baseType: !148)
!147 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "/home/seshagiri/work/angora/tests/test_dataset")
!148 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !119, file: !120, line: 278, baseType: !150, size: 16, offset: 1024)
!150 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !119, file: !120, line: 279, baseType: !152, size: 8, offset: 1040)
!152 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !119, file: !120, line: 280, baseType: !154, size: 8, offset: 1048)
!154 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 8, elements: !155)
!155 = !{!156}
!156 = !DISubrange(count: 1)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !119, file: !120, line: 284, baseType: !158, size: 64, offset: 1088)
!158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !159, size: 64)
!159 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !120, line: 154, baseType: null)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !119, file: !120, line: 293, baseType: !161, size: 64, offset: 1152)
!161 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !147, line: 141, baseType: !148)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !119, file: !120, line: 301, baseType: !163, size: 64, offset: 1216)
!163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !119, file: !120, line: 302, baseType: !163, size: 64, offset: 1280)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !119, file: !120, line: 303, baseType: !163, size: 64, offset: 1344)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !119, file: !120, line: 304, baseType: !163, size: 64, offset: 1408)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !119, file: !120, line: 306, baseType: !168, size: 64, offset: 1472)
!168 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !169, line: 62, baseType: !24)
!169 = !DIFile(filename: "/home/seshagiri/installed_apps/clang+llvm/lib/clang/7.0.1/include/stddef.h", directory: "/home/seshagiri/work/angora/tests/test_dataset")
!170 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !119, file: !120, line: 307, baseType: !4, size: 32, offset: 1536)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !119, file: !120, line: 309, baseType: !172, size: 160, offset: 1568)
!172 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 160, elements: !173)
!173 = !{!174}
!174 = !DISubrange(count: 20)
!175 = !DILocalVariable(name: "buf", scope: !108, file: !1, line: 62, type: !176)
!176 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 1024, elements: !177)
!177 = !{!178}
!178 = !DISubrange(count: 128)
!179 = !DILocalVariable(name: "result", scope: !108, file: !1, line: 63, type: !4)
!180 = !DILocalVariable(name: "ret", scope: !108, file: !1, line: 75, type: !168)
!181 = !DILocation(line: 59, column: 14, scope: !108)
!182 = !DILocation(line: 59, column: 27, scope: !108)
!183 = !DILocation(line: 62, column: 5, scope: !108)
!184 = !DILocation(line: 62, column: 10, scope: !108)
!185 = !DILocation(line: 65, column: 14, scope: !186)
!186 = distinct !DILexicalBlock(scope: !108, file: !1, line: 65, column: 9)
!187 = !DILocation(line: 65, column: 9, scope: !108)
!188 = !DILocation(line: 66, column: 9, scope: !189)
!189 = distinct !DILexicalBlock(scope: !186, file: !1, line: 65, column: 19)
!190 = !DILocation(line: 69, column: 16, scope: !108)
!191 = !{!192, !192, i64 0}
!192 = !{!"any pointer", !38, i64 0}
!193 = !DILocation(line: 69, column: 10, scope: !108)
!194 = !DILocation(line: 61, column: 11, scope: !108)
!195 = !DILocation(line: 71, column: 10, scope: !196)
!196 = distinct !DILexicalBlock(scope: !108, file: !1, line: 71, column: 9)
!197 = !DILocation(line: 71, column: 9, scope: !108)
!198 = !DILocation(line: 72, column: 9, scope: !199)
!199 = distinct !DILexicalBlock(scope: !196, file: !1, line: 71, column: 14)
!200 = !DILocation(line: 73, column: 5, scope: !199)
!201 = !DILocation(line: 75, column: 18, scope: !108)
!202 = !DILocation(line: 75, column: 12, scope: !108)
!203 = !DILocation(line: 76, column: 5, scope: !108)
!204 = !DILocation(line: 78, column: 13, scope: !205)
!205 = distinct !DILexicalBlock(scope: !108, file: !1, line: 78, column: 9)
!206 = !DILocation(line: 78, column: 9, scope: !108)
!207 = !DILocation(line: 79, column: 9, scope: !208)
!208 = distinct !DILexicalBlock(scope: !205, file: !1, line: 78, column: 20)
!209 = !DILocation(line: 80, column: 9, scope: !208)
!210 = !DILocation(line: 83, column: 14, scope: !108)
!211 = !DILocation(line: 63, column: 9, scope: !108)
!212 = !DILocation(line: 85, column: 16, scope: !213)
!213 = distinct !DILexicalBlock(scope: !108, file: !1, line: 85, column: 9)
!214 = !DILocation(line: 85, column: 9, scope: !108)
!215 = !DILocation(line: 86, column: 9, scope: !216)
!216 = distinct !DILexicalBlock(scope: !213, file: !1, line: 85, column: 22)
!217 = !DILocation(line: 87, column: 23, scope: !218)
!218 = distinct !DILexicalBlock(scope: !213, file: !1, line: 87, column: 16)
!219 = !DILocation(line: 87, column: 16, scope: !213)
!220 = !DILocation(line: 88, column: 9, scope: !221)
!221 = distinct !DILexicalBlock(scope: !218, file: !1, line: 87, column: 29)
!222 = !DILocation(line: 89, column: 5, scope: !221)
!223 = !DILocation(line: 90, column: 9, scope: !224)
!224 = distinct !DILexicalBlock(scope: !218, file: !1, line: 89, column: 12)
!225 = !DILocation(line: 94, column: 1, scope: !108)
